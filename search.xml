<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/07/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>等级保护-window</title>
    <url>/2021/10/14/%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4-window/</url>
    <content><![CDATA[<h1 id="1-身份鉴别"><a href="#1-身份鉴别" class="headerlink" title="1. 身份鉴别"></a>1. 身份鉴别</h1><h2 id="1-1-测评项目-a"><a href="#1-1-测评项目-a" class="headerlink" title="1.1 测评项目 a)"></a>1.1 测评项目 a)</h2><p><strong>内容</strong><br>应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换；</p>
<h3 id="1-1-1-应核查用户在登录时是否采用了身份鉴别措施"><a href="#1-1-1-应核查用户在登录时是否采用了身份鉴别措施" class="headerlink" title="1.1.1  应核查用户在登录时是否采用了身份鉴别措施"></a>1.1.1  应核查用户在登录时是否采用了身份鉴别措施</h3><p>身份标识功能（用户名）属于windows自带功能。用户进行鉴别就是登录时需要你输入用户名、口令的行为，不是强制开启的，可以在某种程度上取消掉。</p>
<p>针对本地登录，使用<strong>Win+R</strong>打开运行框，在里面内输入<strong>netplwiz</strong>，则会出现用户账户页面<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140939004.png" alt="image-20220714093905934"></p>
<ul>
<li>如果不勾选红框内容，则表示下次开机时会跳过验证直接登录Admin账号。但是并不是任何情况都会跳过登录，账号切换、睡眠、锁定、注销都需要再次进行身份鉴别。</li>
<li>如果某用户是空口令，那么肯定不能达到该要求。</li>
</ul>
<h3 id="1-1-2-应核查用户列表确认用户身份标识是否具有唯一性"><a href="#1-1-2-应核查用户列表确认用户身份标识是否具有唯一性" class="headerlink" title="1.1.2 应核查用户列表确认用户身份标识是否具有唯一性"></a>1.1.2 应核查用户列表确认用户身份标识是否具有唯一性</h3><p>window自动实现，即用户名或用户ID不能相同。默认符合</p>
<h3 id="1-1-3-应核查用户配置信息或测试验证是否不存在空口令用户"><a href="#1-1-3-应核查用户配置信息或测试验证是否不存在空口令用户" class="headerlink" title="1.1.3 应核查用户配置信息或测试验证是否不存在空口令用户"></a>1.1.3 应核查用户配置信息或测试验证是否不存在空口令用户</h3><p>空口令去查就能知道，略过</p>
<h3 id="1-1-4-应核查用户鉴别信息是否具有复杂度要求并定期更换"><a href="#1-1-4-应核查用户鉴别信息是否具有复杂度要求并定期更换" class="headerlink" title="1.1.4 应核查用户鉴别信息是否具有复杂度要求并定期更换"></a>1.1.4 应核查用户鉴别信息是否具有复杂度要求并定期更换</h3><p><strong>复杂度要求</strong> </p>
<ol>
<li>要看口令有没有达到实际要求的复杂度。</li>
<li>要看windows是否配置了复杂度安全策略</li>
</ol>
<ul>
<li>在 Win+R 中输入 <code>secpol.msc</code>可以打开本地安全策略<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140939999.png" alt="image-20220714093951938"><br>可以看到密码的复杂度以及达到了需要的要求<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140940522.png" alt="image-20220714094017460"></li>
</ul>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140941242.png" alt="image-20220714094118194"></p>
<ul>
<li><strong>定期更换</strong><br>这个就是看口令的更换周期在CMD中输入<code>net user 用户名 </code>查看上一次设置密码的时间<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140941634.png" alt="image-20220714094140582"><br>或者我们也可以直接看密码策略里面，里面都有写密码最长使用时间<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140942425.png" alt="image-20220714094204382"><br>对于口令更换策略还需要注意计算机管理-本地用户和组-用户中<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140942126.png" alt="image-20220714094233074"><br>如果这里勾选了密码永不过期的话，上面的时间策略也就失效了。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140942888.png" alt="image-20220714094248837"></li>
</ul>
<h2 id="1-2-测评项目-b"><a href="#1-2-测评项目-b" class="headerlink" title="1.2 测评项目 b)"></a>1.2 测评项目 b)</h2><p><strong>内容</strong><br>应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施</p>
<h3 id="1-2-1-应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等"><a href="#1-2-1-应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等" class="headerlink" title="1.2.1 应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等"></a>1.2.1 应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等</h3><p>这个只用看账户锁定策略的锁定时间和次数就行，一般是5次&#x2F;30min<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140943323.png" alt="image-20220714094306272"></p>
<h3 id="1-2-2应核查是否配置并启用了登录连接超时及自动退出功能"><a href="#1-2-2应核查是否配置并启用了登录连接超时及自动退出功能" class="headerlink" title="1.2.2应核查是否配置并启用了登录连接超时及自动退出功能"></a>1.2.2应核查是否配置并启用了登录连接超时及自动退出功能</h3><p>这个只用看屏幕保护程序或者睡眠时间就行，小于30min即可。</p>
<h2 id="1-3-测评项目-c"><a href="#1-3-测评项目-c" class="headerlink" title="1.3 测评项目 c)"></a>1.3 测评项目 c)</h2><p><strong>内容</strong><br>当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听</p>
<h3 id="1-3-1-应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听"><a href="#1-3-1-应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听" class="headerlink" title="1.3.1 应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听"></a>1.3.1 应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听</h3><p>如果服务器没有连接外部网络，没有WIFI，管理服务器只能去机房操作，就不村子啊远程管理，即符合。<br>如果存在远程管理，则：</p>
<ol>
<li>远程桌面<br>计算机配置—管理模板—window组件—远程桌面服务—远程桌面会话主机—安全<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140943683.png" alt="image-20220714094330604"><br>或者运行tsconfig.msc，打开远程桌面会话主机配置<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140943474.png" alt="image-20220714094358393"><br>还有就是要看有没有打开telnet，打开了就默认不符合，因为telnet默认不加密。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140944760.png" alt="image-20220714094418704"></li>
</ol>
<h2 id="1-4-测评项目-d"><a href="#1-4-测评项目-d" class="headerlink" title="1.4 测评项目 d)"></a>1.4 测评项目 d)</h2><p><strong>内容</strong><br>应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现</p>
<h3 id="1-4-1应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别"><a href="#1-4-1应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别" class="headerlink" title="1.4.1应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别"></a>1.4.1应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别</h3><p>测评项中的两种组合的鉴别技术，就是使用三个要素里至少两个不同的要素，比如“用户名、口令”+“数字证书”。</p>
<p>所以如果只是重复的使用其中一种要素，比如登录时需要输入两次不同的“用户名、口令”，那就不叫双因素认证，而叫两步验证。</p>
<h3 id="1-4-2应核查其中一种鉴别技术是否使用密码技术来实现"><a href="#1-4-2应核查其中一种鉴别技术是否使用密码技术来实现" class="headerlink" title="1.4.2应核查其中一种鉴别技术是否使用密码技术来实现"></a>1.4.2应核查其中一种鉴别技术是否使用密码技术来实现</h3><p>使用“密码”进行登录，不代表一定就使用了“密码技术”。</p>
<p>当然，纯粹的口令验证应该是不存在的，无论是windows还是linux，你的账户口令肯定都是加过密的，比如linux，存的其实是使用单向散列算法（如md5）对你的口令进行计算得出来的杂凑值。</p>
<h1 id="2-访问控制"><a href="#2-访问控制" class="headerlink" title="2. 访问控制"></a>2. 访问控制</h1><h2 id="2-1-测评项目-a"><a href="#2-1-测评项目-a" class="headerlink" title="2.1 测评项目 a)"></a>2.1 测评项目 a)</h2><p><strong>内容</strong><br>应对登录的用户分配账户和权限</p>
<h3 id="2-1-1-应核查是否为用户分配了账户和权限及相关设置情况"><a href="#2-1-1-应核查是否为用户分配了账户和权限及相关设置情况" class="headerlink" title="2.1.1 应核查是否为用户分配了账户和权限及相关设置情况"></a>2.1.1 应核查是否为用户分配了账户和权限及相关设置情况</h3><p>本地用户的权限分配直接问就行<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140944207.png" alt="image-20220714094441147"></p>
<h3 id="2-1-2-应核查是否已禁用或限制匿名、默认账户的访问权限"><a href="#2-1-2-应核查是否已禁用或限制匿名、默认账户的访问权限" class="headerlink" title="2.1.2 应核查是否已禁用或限制匿名、默认账户的访问权限"></a>2.1.2 应核查是否已禁用或限制匿名、默认账户的访问权限</h3><p>对于默认账户、匿名账户的访问权限的限制，就是对是guest、users、Everyone组的权限的限制。但是admin没必要限制权限</p>
<p>对于guest来说，可以看看它是否被禁用，guest无法删除，但是可以被禁用</p>
<p>总之都可以在这里查看账户的权限<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140945581.png" alt="image-20220714094500501"></p>
<h2 id="2-2-测评项目-b"><a href="#2-2-测评项目-b" class="headerlink" title="2.2 测评项目 b)"></a>2.2 测评项目 b)</h2><p><strong>内容</strong><br>应重命名或删除默认账户，修改默认账户的默认口令</p>
<h3 id="2-2-1-应核查是否已经重命名默认账户或默认账户已被删除"><a href="#2-2-1-应核查是否已经重命名默认账户或默认账户已被删除" class="headerlink" title="2.2.1 应核查是否已经重命名默认账户或默认账户已被删除"></a>2.2.1 应核查是否已经重命名默认账户或默认账户已被删除</h3><p>windows的默认账户就是administrator和guest。</p>
<ol>
<li><strong>administrator</strong>，只用看是否将administrator进行了重命名或者禁用，windows不存在默认口令，默认就符合（当然空口令是不符合的）。</li>
<li><strong>guest</strong>，检查是否被禁用即可</li>
</ol>
<h3 id="2-2-2-应核查是否已修改默认账户的默认口令"><a href="#2-2-2-应核查是否已修改默认账户的默认口令" class="headerlink" title="2.2.2 应核查是否已修改默认账户的默认口令"></a>2.2.2 应核查是否已修改默认账户的默认口令</h3><p>上↑↑↑↑</p>
<h2 id="2-3-测评项目-c"><a href="#2-3-测评项目-c" class="headerlink" title="2.3 测评项目 c)"></a>2.3 测评项目 c)</h2><p><strong>内容</strong><br>应及时删除或停用多余的、过期的账户，避免共享账户的存在</p>
<h3 id="2-3-1-应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应"><a href="#2-3-1-应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应" class="headerlink" title="2.3.1 应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应"></a>2.3.1 应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应</h3><p>这个一一对应去问问核实就行了</p>
<h3 id="2-3-2-应测试验证多余的、过期的账户是否被删除或停用"><a href="#2-3-2-应测试验证多余的、过期的账户是否被删除或停用" class="headerlink" title="2.3.2 应测试验证多余的、过期的账户是否被删除或停用"></a>2.3.2 应测试验证多余的、过期的账户是否被删除或停用</h3><p>多余过期账户在这里就能看到<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140945607.png" alt="image-20220714094527546"></p>
<h2 id="2-4-测评项目-d"><a href="#2-4-测评项目-d" class="headerlink" title="2.4 测评项目 d)"></a>2.4 测评项目 d)</h2><p><strong>内容</strong><br>应授予管理用户所需的最小权限，实现管理用户的权限分离</p>
<h3 id="2-4-1应核查是否进行角色划分-，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限"><a href="#2-4-1应核查是否进行角色划分-，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限" class="headerlink" title="2.4.1应核查是否进行角色划分 ，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限"></a>2.4.1应核查是否进行角色划分 ，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限</h3><p>这一项一起写了，主要就是看权限有没有分离<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140945652.png" alt="image-20220714094553584"><br>用户权限表<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140946953.png" alt="image-20220714094631833"></p>
<h2 id="2-5-测评项目-e"><a href="#2-5-测评项目-e" class="headerlink" title="2.5 测评项目 e)"></a>2.5 测评项目 e)</h2><p><strong>内容</strong><br>应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则</p>
<h3 id="2-5-1-应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则"><a href="#2-5-1-应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则" class="headerlink" title="2.5.1 应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则"></a>2.5.1 应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则</h3><p>主要还是看用户有没有能越权访问<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140947429.png" alt="image-20220714094702362"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140947861.png" alt="image-20220714094719812"></p>
<h2 id="2-6-测评项目-f"><a href="#2-6-测评项目-f" class="headerlink" title="2.6 测评项目 f)"></a>2.6 测评项目 f)</h2><p><strong>内容</strong><br>访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级</p>
<h3 id="2-6-1-应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级"><a href="#2-6-1-应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级" class="headerlink" title="2.6.1 应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级"></a>2.6.1 应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级</h3><p>主要看是否做了访问控制策略，以及策略是否明确到某个用户（而不仅仅是用户组），某个文件（不仅仅是文件夹）</p>
<h2 id="2-7-测评项目-g"><a href="#2-7-测评项目-g" class="headerlink" title="2.7 测评项目 g)"></a>2.7 测评项目 g)</h2><p><strong>内容</strong><br>应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问</p>
<h3 id="2-7-1-应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略"><a href="#2-7-1-应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略" class="headerlink" title="2.7.1 应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略"></a>2.7.1 应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略</h3><p>window默认不符合</p>
<h1 id="3-安全审计"><a href="#3-安全审计" class="headerlink" title="3. 安全审计"></a>3. 安全审计</h1><h2 id="3-1-测评项目-a"><a href="#3-1-测评项目-a" class="headerlink" title="3.1 测评项目 a)"></a>3.1 测评项目 a)</h2><p><strong>内容</strong><br>应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计</p>
<h3 id="3-1-1-应核查是否开启了安全审计功能"><a href="#3-1-1-应核查是否开启了安全审计功能" class="headerlink" title="3.1.1 应核查是否开启了安全审计功能"></a>3.1.1 应核查是否开启了安全审计功能</h3><p>在运行框中依次输入CompMgmtLauncher、eventvwr、compmgmt.msc<br>依次打开能够查看安全审计策略<br>服务器管理器<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140947919.png" alt="image-20220714094739835"><br>事件查看器<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140948885.png" alt="image-20220714094800811"><br>计算机管理<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140948750.png" alt="image-20220714094822668"></p>
<h3 id="3-1-2-应核查安全审计范围是否覆盖到每个用户"><a href="#3-1-2-应核查安全审计范围是否覆盖到每个用户" class="headerlink" title="3.1.2 应核查安全审计范围是否覆盖到每个用户"></a>3.1.2 应核查安全审计范围是否覆盖到每个用户</h3><p>一般来说开启了审计功能这项就符合。</p>
<h3 id="3-1-3-应核查是否对重要的用户行为和重要安全事件进行审计"><a href="#3-1-3-应核查是否对重要的用户行为和重要安全事件进行审计" class="headerlink" title="3.1.3 应核查是否对重要的用户行为和重要安全事件进行审计"></a>3.1.3 应核查是否对重要的用户行为和重要安全事件进行审计</h3><p>直接打开管理工具-本地安全策略能够看到是否开启审计功能。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140948624.png" alt="image-20220714094838560"></p>
<h2 id="3-2-测评项目-b"><a href="#3-2-测评项目-b" class="headerlink" title="3.2 测评项目 b)"></a>3.2 测评项目 b)</h2><p><strong>内容</strong><br>审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</p>
<h3 id="3-2-1-应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息"><a href="#3-2-1-应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息" class="headerlink" title="3.2.1 应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息"></a>3.2.1 应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</h3><ol>
<li>首先要注意时间的问题，如果服务器联网则时间默认符合。如果不联网则无法保证。对于局域网内可以设置一台ntp服务器来解决这个问题</li>
<li>其余信息的话，windows的审计记录是包括要求字段的，理论上默认就符合该测评项。</li>
</ol>
<h2 id="3-3-测评项目-c"><a href="#3-3-测评项目-c" class="headerlink" title="3.3 测评项目 c)"></a>3.3 测评项目 c)</h2><p><strong>内容</strong><br>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等</p>
<p>此项还未编辑</p>
<h2 id="3-4-测评项目-d"><a href="#3-4-测评项目-d" class="headerlink" title="3.4 测评项目 d)"></a>3.4 测评项目 d)</h2><p><strong>内容</strong><br>应对审计进程进行保护，防止未经授权的中断</p>
<h3 id="3-4-1-应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护"><a href="#3-4-1-应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护" class="headerlink" title="3.4.1 应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护"></a>3.4.1 应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护</h3><p>这一项和a差不多windows一般默认开启，要关闭还要用一些方法。</p>
<h1 id="4-入侵防范"><a href="#4-入侵防范" class="headerlink" title="4. 入侵防范"></a>4. 入侵防范</h1><h2 id="4-1-测评项目-a"><a href="#4-1-测评项目-a" class="headerlink" title="4.1 测评项目 a)"></a>4.1 测评项目 a)</h2><p><strong>内容</strong><br>应遵循最小安装的原则，仅安装需要的组件和应用程序</p>
<h3 id="4-1-1-应核查是否遵循最小安装原则-是否未安装非必要的组件和应用程序"><a href="#4-1-1-应核查是否遵循最小安装原则-是否未安装非必要的组件和应用程序" class="headerlink" title="4.1.1 应核查是否遵循最小安装原则,是否未安装非必要的组件和应用程序"></a>4.1.1 应核查是否遵循最小安装原则,是否未安装非必要的组件和应用程序</h3><p>这一条通过输入<code>appwiz.cpl</code>可以看到，多余或者不明白功能的应用程序可以询问管理员用途。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140949551.png" alt="image-20220714094921485"></p>
<h2 id="4-2-测评项目-b"><a href="#4-2-测评项目-b" class="headerlink" title="4.2 测评项目 b)"></a>4.2 测评项目 b)</h2><p><strong>内容</strong><br>应关闭不需要的系统服务、默认共享和高危端口</p>
<h3 id="4-2-1-应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口"><a href="#4-2-1-应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口" class="headerlink" title="4.2.1 应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口"></a>4.2.1 应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口</h3><p>这一项不必多说了，非必要的端口一看便知，默认共享就先看服务器管理器的server（一般默认开启），然后在cmd里面输入<code>net share</code>可以查看。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140949684.png" alt="image-20220714094943600"><br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140950645.png" alt="image-20220714095002591"><br>系统开启的服务看这里就知道了<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140950597.png" alt="image-20220714095019526"></p>
<h2 id="4-3-测评项目-c"><a href="#4-3-测评项目-c" class="headerlink" title="4.3 测评项目 c)"></a>4.3 测评项目 c)</h2><p><strong>内容</strong><br>应通过设定终端接入方式或网络地址范围对通过网络进行管理的管理终端进行限制</p>
<h3 id="4-3-1-应核查配置文件或参数是否对终端接入范围进行限制"><a href="#4-3-1-应核查配置文件或参数是否对终端接入范围进行限制" class="headerlink" title="4.3.1 应核查配置文件或参数是否对终端接入范围进行限制"></a>4.3.1 应核查配置文件或参数是否对终端接入范围进行限制</h3><ol>
<li>不存在远程接入，即只有去机房的物理设备查看，直接跳过</li>
<li>使用远程桌面，主要是看windows防火墙和IP策略&#x2F;硬件防火墙有没有对rdp端口（3389）做策略，或者把rdp的端口号给改了。</li>
</ol>
<h2 id="4-4-测评项目-d"><a href="#4-4-测评项目-d" class="headerlink" title="4.4 测评项目 d)"></a>4.4 测评项目 d)</h2><p><strong>内容</strong><br>应提供数据有效性检验功能，保证通过人机接口输入或通过通信接口输入的内容符合系统设定要求</p>
<p>这一项略</p>
<h2 id="4-5-测评项目-e"><a href="#4-5-测评项目-e" class="headerlink" title="4.5 测评项目 e)"></a>4.5 测评项目 e)</h2><p><strong>内容</strong><br>应能发现可能存在的已知漏洞，并在经过充分测试评估后，及时修补漏洞</p>
<h3 id="4-5-1应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞"><a href="#4-5-1应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞" class="headerlink" title="4.5.1应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞"></a>4.5.1应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞</h3><p>DDDD</p>
<h2 id="4-6-测评项目-f"><a href="#4-6-测评项目-f" class="headerlink" title="4.6 测评项目 f)"></a>4.6 测评项目 f)</h2><p><strong>内容</strong><br>应能够检测到对重要节点进行入侵的行为，并在发生严重入侵事件时提供报警</p>
<p>这一项对于windows来说，要通过第三方软硬件来实现了。</p>
<p>比如EDR、卡巴斯基（企业版）等，等具备入侵防范检测和报警功能（通过邮箱、短信等），或者在网络中部署有IPS等设备具有相关功能也可以。</p>
<p>另外，部署在云上的话，阿里云、华为云等，也存在这样的安全服务，也可以实现要求。但是要注意的是，被测评方是否购买了此类安全服务。</p>
<h1 id="5-恶意代码防范"><a href="#5-恶意代码防范" class="headerlink" title="5. 恶意代码防范"></a>5. 恶意代码防范</h1><h2 id="5-1-测评项目a"><a href="#5-1-测评项目a" class="headerlink" title="5.1 测评项目a)"></a>5.1 测评项目a)</h2><p><strong>内容</strong><br>应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。</p>
<h3 id="5-1-1-应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。"><a href="#5-1-1-应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。" class="headerlink" title="5.1.1 应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。"></a>5.1.1 应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。</h3><p>1）查看是否安装了防恶意代码软件（注：凡Windows操作系统，未安装防恶意代码软件统统判定为高风险，情况较为严重）<br>2）查看恶意代码软件的病毒库及版本是否及时进行了更新</p>
<h1 id="6-可信验证"><a href="#6-可信验证" class="headerlink" title="6. 可信验证"></a>6. 可信验证</h1><h2 id="6-1-测评项目a"><a href="#6-1-测评项目a" class="headerlink" title="6.1 测评项目a)"></a>6.1 测评项目a)</h2><p><strong>内容</strong><br>可基于可信根对计算设备的系统引导程序、系统程序、重要配置参数和应用程序等进行可信验证，并在应用程序的关键执行环节进行动态可信验证，在检测到其可信性受到破坏后进行报警，并将验证结果形成审计记录送至安全管理中心。</p>
<h3 id="6-1-1-可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。"><a href="#6-1-1-可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。" class="headerlink" title="6.1.1 可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。"></a>6.1.1 可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。</h3><p>目前绝大部分的信息系统都没有可信验证，仅在工控系统中存在极少数含有可信计算的，所以目前此项都是不适用，（如果运气好遇到可信计算的信息系统另算）</p>
<h1 id="7-数据完整性"><a href="#7-数据完整性" class="headerlink" title="7. 数据完整性"></a>7. 数据完整性</h1><h2 id="7-1-测评项目a"><a href="#7-1-测评项目a" class="headerlink" title="7.1 测评项目a)"></a>7.1 测评项目a)</h2><p><strong>内容</strong><br>应采用校验技术或密码技术保证重要数据在传输过程中的完整性，包括但不限于鉴别数据、重要业务数据、重要审计数据、重要配置数据、重要视频数据和重要个人信息等。</p>
<h3 id="7-1-1-应采用校验技术或密码技术保证重要数据在传输过程中的完整性"><a href="#7-1-1-应采用校验技术或密码技术保证重要数据在传输过程中的完整性" class="headerlink" title="7.1.1 应采用校验技术或密码技术保证重要数据在传输过程中的完整性"></a>7.1.1 应采用校验技术或密码技术保证重要数据在传输过程中的完整性</h3><p>若服务器的数据仅含自身配置数据，那么就根据身份鉴别C项来写，涉及到别的例如审计数据的传输再另外算</p>
<h2 id="7-2-测评项目b"><a href="#7-2-测评项目b" class="headerlink" title="7.2 测评项目b)"></a>7.2 测评项目b)</h2><p><strong>内容</strong><br>应采用校验技术或密码技术保证重要数据在存储过程中的完整性，包括但不限于鉴别数据、重要业务数据、重要审计数据、重要配置数据、重要视频数据和重要个人信息等。</p>
<h3 id="7-2-1-应采用校验技术或密码技术保证重要数据在存储过程中的完整性"><a href="#7-2-1-应采用校验技术或密码技术保证重要数据在存储过程中的完整性" class="headerlink" title="7.2.1 应采用校验技术或密码技术保证重要数据在存储过程中的完整性"></a>7.2.1 应采用校验技术或密码技术保证重要数据在存储过程中的完整性</h3><p>操作系统能够保证自身数据存储的完整性</p>
<h1 id="8-数据保密性"><a href="#8-数据保密性" class="headerlink" title="8. 数据保密性"></a>8. 数据保密性</h1><h2 id="8-1-测评项目a"><a href="#8-1-测评项目a" class="headerlink" title="8.1 测评项目a)"></a>8.1 测评项目a)</h2><p><strong>内容</strong><br>应采用密码技术保证重要数据在传输过程中的保密性，包括但不限于鉴别数据、重要业务数据和重要个人信息等。 </p>
<h3 id="8-1-1应采用密码技术保证重要数据在传输过程中的保密性，"><a href="#8-1-1应采用密码技术保证重要数据在传输过程中的保密性，" class="headerlink" title="8.1.1应采用密码技术保证重要数据在传输过程中的保密性，"></a>8.1.1应采用密码技术保证重要数据在传输过程中的保密性，</h3><p>若服务器的数据仅含自身配置数据，那么就根据身份鉴别C项来写，涉及到别的例如审计数据的传输再另外算</p>
<h2 id="8-2-测评项目b"><a href="#8-2-测评项目b" class="headerlink" title="8.2 测评项目b)"></a>8.2 测评项目b)</h2><p><strong>内容</strong><br>应采用密码技术保证重要数据在存储过程中的保密性，包括但不限于鉴别数据、重要业务数据和重要个人信息等。 </p>
<h3 id="8-2-1-应采用密码技术保证重要数据在存储过程中的保密性"><a href="#8-2-1-应采用密码技术保证重要数据在存储过程中的保密性" class="headerlink" title="8.2.1 应采用密码技术保证重要数据在存储过程中的保密性"></a>8.2.1 应采用密码技术保证重要数据在存储过程中的保密性</h3><p>操作系统能够保证自身数据在存储过程的保密性</p>
<h1 id="9-数据备份恢复"><a href="#9-数据备份恢复" class="headerlink" title="9. 数据备份恢复"></a>9. 数据备份恢复</h1><h2 id="9-1-测评项目a"><a href="#9-1-测评项目a" class="headerlink" title="9.1 测评项目a)"></a>9.1 测评项目a)</h2><p><strong>内容</strong><br>应提供重要数据的本地数据备份与恢复功能。</p>
<h3 id="9-1-1-应提供重要数据的本地数据备份与恢复功能；"><a href="#9-1-1-应提供重要数据的本地数据备份与恢复功能；" class="headerlink" title="9.1.1 应提供重要数据的本地数据备份与恢复功能；"></a>9.1.1 应提供重要数据的本地数据备份与恢复功能；</h3><p>服务器仅存在自身配置数据的情况下是不需要备份和恢复，所以此项在服务器层面是不适用，应在数据库层面体现。</p>
<h2 id="9-2-测评项目b"><a href="#9-2-测评项目b" class="headerlink" title="9.2 测评项目b)"></a>9.2 测评项目b)</h2><p><strong>内容</strong><br>应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地</p>
<h3 id="9-2-1-应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。"><a href="#9-2-1-应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。" class="headerlink" title="9.2.1 应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。"></a>9.2.1 应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。</h3><p>服务器仅存在自身配置数据的情况下是不需要异地备份和恢复，所以此项在服务器层面是不适用，应在数据库层面体现。</p>
<h2 id="9-3-测评项目c"><a href="#9-3-测评项目c" class="headerlink" title="9.3 测评项目c)"></a>9.3 测评项目c)</h2><p><strong>内容</strong><br>应提供重要数据处理系统的热冗余，保证系统的高可用性。</p>
<h3 id="9-3-1-应提供重要数据处理系统的热冗余，保证系统的高可用性。"><a href="#9-3-1-应提供重要数据处理系统的热冗余，保证系统的高可用性。" class="headerlink" title="9.3.1 应提供重要数据处理系统的热冗余，保证系统的高可用性。"></a>9.3.1 应提供重要数据处理系统的热冗余，保证系统的高可用性。</h3><p>此项需要询问管理员和查询网络拓扑图，服务器是否采用热冗余的方式部署，能不能够保证服务器的高可用性</p>
<h1 id="10-剩余信息保护"><a href="#10-剩余信息保护" class="headerlink" title="10. 剩余信息保护"></a>10. 剩余信息保护</h1><h2 id="10-1-测评项目a"><a href="#10-1-测评项目a" class="headerlink" title="10.1 测评项目a)"></a>10.1 测评项目a)</h2><p><strong>内容</strong><br>应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除；</p>
<h3 id="10-1-1-应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除"><a href="#10-1-1-应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除" class="headerlink" title="10.1.1 应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除"></a>10.1.1 应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除</h3><p>查看是否禁用“用可换源的加密来存储密码”和启用“清除虚拟内存页面文件”，</p>
<h2 id="10-2-测评项目b"><a href="#10-2-测评项目b" class="headerlink" title="10.2 测评项目b)"></a>10.2 测评项目b)</h2><p><strong>内容</strong><br>应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。 </p>
<h3 id="10-2-1-应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。"><a href="#10-2-1-应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。" class="headerlink" title="10.2.1 应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。"></a>10.2.1 应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。</h3><p>查看是否禁用了“清除虚拟内存页面文件”，能不能够保证存有敏感数据的存储空间被释放或重新分配前得到完全清除</p>
]]></content>
      <categories>
        <category>等级保护</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>windows一键创建隐藏账户</title>
    <url>/2022/07/14/%E4%B8%80%E9%94%AE%E5%88%9B%E5%BB%BA%E9%9A%90%E8%97%8F%E8%B4%A6%E6%88%B7/</url>
    <content><![CDATA[<h1 id="手动创建"><a href="#手动创建" class="headerlink" title="手动创建"></a>手动创建</h1><h2 id="方法一：添加-符"><a href="#方法一：添加-符" class="headerlink" title="方法一：添加 $ 符"></a>方法一：添加 $ 符</h2><p>添加隐藏用户并添加到管理员组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ Passw0rd /addnet localgroup administrators teamssix$ /add</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/640" alt="图片"></p>
<p>在使用 net user 查看当前用户时，是看不到这个用户的，但是在控制面板里可以看到该用户</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444359.png" alt="图片"></p>
<p>使用 wmic 也能看到该用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wmic useraccount get Name</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444622.png" alt="图片"></p>
<p>删除该用户直接用 net user 即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ /del</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444393.png" alt="图片"></p>
<h2 id="方法二：修改注册表"><a href="#方法二：修改注册表" class="headerlink" title="方法二：修改注册表"></a>方法二：修改注册表</h2><p>打开注册表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SAM\SAM\</span><br></pre></td></tr></table></figure>

<p>赋予管理员用户完全控制的权限</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444797.png" alt="图片"></p>
<p>关闭注册表，再次来到刚才的路径，这时就可以看到 SAM 文件夹里的内容了</p>
<p>这时需要导出三个文件：</p>
<ul>
<li>Users 下的管理员文件</li>
<li>Users 下的隐藏账号文件</li>
<li>Names 下的隐藏账号文件</li>
</ul>
<p>Users 下的文件名可能不太好判断归属那个用户，不过在选择 Names 下的用户时，可以看到相应的类型值，比如 teamssix$ 账号对应的是 0x3ea，那么 Users 下的文件夹就是 000003EA，同理找到管理员 Administrator 对应的是 00001F4</p>
<p>找到这三个文件后，右击选择导出</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444200.png" alt="图片"></p>
<p>使用记事本打开导出的 Users 下的两个文件，将 Administrator 中的 F 键值内容进行替换到 teamssix$ 中</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444887.png" alt="图片"></p>
<p>然后删除 teamssix$ 用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ /del</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444419.png" alt="图片"></p>
<p>这个时候其实 teamssix$ 用户就被删掉了，然后利用刚才的注册表文件再添加上 teamssix$ 用户</p>
<p>双击刚才导出的 Users 下的 teamssix$ 文件和 Names 下的 teamssix$ 文件。</p>
<p>此时，利用注册表新建隐藏账号就做好了，不管是 net user 还是控制面板都看不到该用户。</p>
<p>使用 net user teamssix$ 能看到该用户，说明该用户是存在的。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444095.png" alt="图片"></p>
<p>从上面图片可以看到其实账号是禁用的状态，因此想使用这个账号，还得给它启用才行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ /active:yes</span><br></pre></td></tr></table></figure>

<p>如果想删除这个账号，在注册表中删除 Users 下的 000003EA 和 Names 下的 teamssix$ 就行了。</p>
<p>不过这种方法依然是有破绽的，比如在注册表里还是能发现 teamssix$ 用户的，使用 wmic 也能看到该用户。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444277.png" alt="图片"></p>
<p>而且当电脑重启后，在计算机管理里也能看到刚刚创建的隐藏账号。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444740.png" alt="图片"></p>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p>对比了下两种方法，虽然都有办法去发现隐藏账号，但是第二种修改注册表的方法很明显隐藏性还是更好些，只是操作起来有些麻烦，但是又没有什么用着顺手的工具，所以这里自己写了一个利用注册表添加隐藏账号的小工具。</p>
<p>工具地址：<a href="https://github.com/wgpsec/CreateHiddenAccount">https://github.com/wgpsec/CreateHiddenAccount</a></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444634.png" alt="图片"></p>
<p>命令帮助信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-c 检查当前系统的隐藏账户 -d 指定要删除的用户名，如果添加的用户名不是以 $ 结尾，则工具会自动在用户名后添加上 $ -p 指定添加的用户的密码 -u 指定要添加的用户名，如果添加的用户名不是以 $ 结尾，则工具会自动在用户名后添加上 $</span><br></pre></td></tr></table></figure>

<h2 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h2><p>例如这里添加一个用户名为 teamssix 的隐藏账号，工具会自动在用户名后添加 $ 符，因此创建后的用户名为 teamssix$</p>
<p>使用的时候，记得在管理员权限下运行，不然会提示权限不足</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateHiddenAccount.exe -u teamssix -p Passw0rd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444927.png" alt="图片"></p>
<p>创建完后，通过 net user 和控制面板等等都是看不到这个账号的</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445869.png" alt="图片"></p>
<p>检查当前系统的隐藏账号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateHiddenAccount.exe -c</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445731.png" alt="图片"></p>
<p>删除 teamssix 隐藏账号，当删除完账号后，再次检查当前系统的隐藏账号，可以看到就提示没有隐藏账号了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateHiddenAccount.exe -d teamssix</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445568.png" alt="图片"></p>
<h2 id="免杀能力"><a href="#免杀能力" class="headerlink" title="免杀能力"></a>免杀能力</h2><p>因为在工具里是利用 Windows API 创建的用户，所以天然具有一定的免杀能力，不过因为工具里需要对注册表进行操作，所以还是会被杀软发现。</p>
<p>我这里用 360 和火绒测试了下免杀的能力，情况大体如下：</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445802.png" alt="图片"></p>
<p>整体上，除了在添加用户的时候，360 会弹窗询问要不要允许修改注册表外，其他时候杀软都是没动静的，个人觉着还行。</p>
<p>不过这个也只是我当时的检测情况，也许明天后天就会被查杀，这个也是很正常的事儿。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Windows 内网渗透</tag>
      </tags>
  </entry>
</search>
